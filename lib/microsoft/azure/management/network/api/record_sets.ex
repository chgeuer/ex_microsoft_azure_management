# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule Microsoft.Azure.Management.Network.Api.RecordSets do
  @moduledoc """
  API calls for all endpoints tagged `RecordSets`.
  """

  alias Microsoft.Azure.Management.Network.Connection
  import Microsoft.Azure.Management.Network.RequestBuilder


  @doc """
  Creates or updates a record set within a DNS zone.

  ## Parameters

  - connection (Microsoft.Azure.Management.Network.Connection): Connection to server
  - resource_group_name (String.t): The name of the resource group.
  - zone_name (String.t): The name of the DNS zone (without a terminating dot).
  - relative_record_set_name (String.t): The name of the record set, relative to the name of the zone.
  - record_type (String.t): The type of DNS record in this record set. Record sets of type SOA can be updated but not created (they are created when the DNS zone is created).
  - parameters (RecordSet): Parameters supplied to the CreateOrUpdate operation.
  - api_version (String.t): Specifies the API version.
  - subscription_id (String.t): Specifies the Azure subscription ID, which uniquely identifies the Microsoft Azure subscription.
  - opts (KeywordList): [optional] Optional parameters
    - :if_match (String.t): The etag of the record set. Omit this value to always overwrite the current record set. Specify the last-seen etag value to prevent accidentally overwritting any concurrent changes.
    - :if_none_match (String.t): Set to &#39;*&#39; to allow a new record set to be created, but to prevent updating an existing record set. Other values will be ignored.

  ## Returns

  {:ok, %Microsoft.Azure.Management.Network.Model.RecordSet{}} on success
  {:error, info} on failure
  """
  @spec record_sets_create_or_update(Tesla.Env.client, String.t, String.t, String.t, String.t, Microsoft.Azure.Management.Network.Model.RecordSet.t, String.t, String.t, keyword()) :: {:ok, Microsoft.Azure.Management.Network.Model.RecordSet.t} | {:error, Tesla.Env.t}
  def record_sets_create_or_update(connection, resource_group_name, zone_name, relative_record_set_name, record_type, parameters, api_version, subscription_id, opts \\ []) do
    optional_params = %{
      :"If-Match" => :headers,
      :"If-None-Match" => :headers
    }
    %{}
    |> method(:put)
    |> url("/subscriptions/#{subscription_id}/resourceGroups/#{resource_group_name}/providers/Microsoft.Network/dnsZones/#{zone_name}/#{record_type}/#{relative_record_set_name}")
    |> add_param(:body, :"parameters", parameters)
    |> add_param(:query, :"api-version", api_version)
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%Microsoft.Azure.Management.Network.Model.RecordSet{})
  end

  @doc """
  Deletes a record set from a DNS zone. This operation cannot be undone.

  ## Parameters

  - connection (Microsoft.Azure.Management.Network.Connection): Connection to server
  - resource_group_name (String.t): The name of the resource group.
  - zone_name (String.t): The name of the DNS zone (without a terminating dot).
  - relative_record_set_name (String.t): The name of the record set, relative to the name of the zone.
  - record_type (String.t): The type of DNS record in this record set. Record sets of type SOA cannot be deleted (they are deleted when the DNS zone is deleted).
  - api_version (String.t): Specifies the API version.
  - subscription_id (String.t): Specifies the Azure subscription ID, which uniquely identifies the Microsoft Azure subscription.
  - opts (KeywordList): [optional] Optional parameters
    - :if_match (String.t): The etag of the record set. Omit this value to always delete the current record set. Specify the last-seen etag value to prevent accidentally deleting any concurrent changes.

  ## Returns

  {:ok, %{}} on success
  {:error, info} on failure
  """
  @spec record_sets_delete(Tesla.Env.client, String.t, String.t, String.t, String.t, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def record_sets_delete(connection, resource_group_name, zone_name, relative_record_set_name, record_type, api_version, subscription_id, opts \\ []) do
    optional_params = %{
      :"If-Match" => :headers
    }
    %{}
    |> method(:delete)
    |> url("/subscriptions/#{subscription_id}/resourceGroups/#{resource_group_name}/providers/Microsoft.Network/dnsZones/#{zone_name}/#{record_type}/#{relative_record_set_name}")
    |> add_param(:query, :"api-version", api_version)
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(false)
  end

  @doc """
  Gets a record set.

  ## Parameters

  - connection (Microsoft.Azure.Management.Network.Connection): Connection to server
  - resource_group_name (String.t): The name of the resource group.
  - zone_name (String.t): The name of the DNS zone (without a terminating dot).
  - relative_record_set_name (String.t): The name of the record set, relative to the name of the zone.
  - record_type (String.t): The type of DNS record in this record set.
  - api_version (String.t): Specifies the API version.
  - subscription_id (String.t): Specifies the Azure subscription ID, which uniquely identifies the Microsoft Azure subscription.
  - opts (KeywordList): [optional] Optional parameters

  ## Returns

  {:ok, %Microsoft.Azure.Management.Network.Model.RecordSet{}} on success
  {:error, info} on failure
  """
  @spec record_sets_get(Tesla.Env.client, String.t, String.t, String.t, String.t, String.t, String.t, keyword()) :: {:ok, Microsoft.Azure.Management.Network.Model.RecordSet.t} | {:error, Tesla.Env.t}
  def record_sets_get(connection, resource_group_name, zone_name, relative_record_set_name, record_type, api_version, subscription_id, _opts \\ []) do
    %{}
    |> method(:get)
    |> url("/subscriptions/#{subscription_id}/resourceGroups/#{resource_group_name}/providers/Microsoft.Network/dnsZones/#{zone_name}/#{record_type}/#{relative_record_set_name}")
    |> add_param(:query, :"api-version", api_version)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%Microsoft.Azure.Management.Network.Model.RecordSet{})
  end

  @doc """
  Lists all record sets in a DNS zone.

  ## Parameters

  - connection (Microsoft.Azure.Management.Network.Connection): Connection to server
  - resource_group_name (String.t): The name of the resource group.
  - zone_name (String.t): The name of the DNS zone (without a terminating dot).
  - api_version (String.t): Specifies the API version.
  - subscription_id (String.t): Specifies the Azure subscription ID, which uniquely identifies the Microsoft Azure subscription.
  - opts (KeywordList): [optional] Optional parameters
    - :__top (integer()): The maximum number of record sets to return. If not specified, returns up to 100 record sets.
    - :__recordsetnamesuffix (String.t): The suffix label of the record set name that has to be used to filter the record set enumerations. If this parameter is specified, Enumeration will return only records that end with .&lt;recordSetNameSuffix&gt;

  ## Returns

  {:ok, %Microsoft.Azure.Management.Network.Model.RecordSetListResult{}} on success
  {:error, info} on failure
  """
  @spec record_sets_list_all_by_dns_zone(Tesla.Env.client, String.t, String.t, String.t, String.t, keyword()) :: {:ok, Microsoft.Azure.Management.Network.Model.RecordSetListResult.t} | {:error, Tesla.Env.t}
  def record_sets_list_all_by_dns_zone(connection, resource_group_name, zone_name, api_version, subscription_id, opts \\ []) do
    optional_params = %{
      :"$top" => :query,
      :"$recordsetnamesuffix" => :query
    }
    %{}
    |> method(:get)
    |> url("/subscriptions/#{subscription_id}/resourceGroups/#{resource_group_name}/providers/Microsoft.Network/dnsZones/#{zone_name}/all")
    |> add_param(:query, :"api-version", api_version)
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%Microsoft.Azure.Management.Network.Model.RecordSetListResult{})
  end

  @doc """
  Lists all record sets in a DNS zone.

  ## Parameters

  - connection (Microsoft.Azure.Management.Network.Connection): Connection to server
  - resource_group_name (String.t): The name of the resource group.
  - zone_name (String.t): The name of the DNS zone (without a terminating dot).
  - api_version (String.t): Specifies the API version.
  - subscription_id (String.t): Specifies the Azure subscription ID, which uniquely identifies the Microsoft Azure subscription.
  - opts (KeywordList): [optional] Optional parameters
    - :__top (integer()): The maximum number of record sets to return. If not specified, returns up to 100 record sets.
    - :__recordsetnamesuffix (String.t): The suffix label of the record set name that has to be used to filter the record set enumerations. If this parameter is specified, Enumeration will return only records that end with .&lt;recordSetNameSuffix&gt;

  ## Returns

  {:ok, %Microsoft.Azure.Management.Network.Model.RecordSetListResult{}} on success
  {:error, info} on failure
  """
  @spec record_sets_list_by_dns_zone(Tesla.Env.client, String.t, String.t, String.t, String.t, keyword()) :: {:ok, Microsoft.Azure.Management.Network.Model.RecordSetListResult.t} | {:error, Tesla.Env.t}
  def record_sets_list_by_dns_zone(connection, resource_group_name, zone_name, api_version, subscription_id, opts \\ []) do
    optional_params = %{
      :"$top" => :query,
      :"$recordsetnamesuffix" => :query
    }
    %{}
    |> method(:get)
    |> url("/subscriptions/#{subscription_id}/resourceGroups/#{resource_group_name}/providers/Microsoft.Network/dnsZones/#{zone_name}/recordsets")
    |> add_param(:query, :"api-version", api_version)
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%Microsoft.Azure.Management.Network.Model.RecordSetListResult{})
  end

  @doc """
  Lists the record sets of a specified type in a DNS zone.

  ## Parameters

  - connection (Microsoft.Azure.Management.Network.Connection): Connection to server
  - resource_group_name (String.t): The name of the resource group.
  - zone_name (String.t): The name of the DNS zone (without a terminating dot).
  - record_type (String.t): The type of record sets to enumerate.
  - api_version (String.t): Specifies the API version.
  - subscription_id (String.t): Specifies the Azure subscription ID, which uniquely identifies the Microsoft Azure subscription.
  - opts (KeywordList): [optional] Optional parameters
    - :__top (integer()): The maximum number of record sets to return. If not specified, returns up to 100 record sets.
    - :__recordsetnamesuffix (String.t): The suffix label of the record set name that has to be used to filter the record set enumerations. If this parameter is specified, Enumeration will return only records that end with .&lt;recordSetNameSuffix&gt;

  ## Returns

  {:ok, %Microsoft.Azure.Management.Network.Model.RecordSetListResult{}} on success
  {:error, info} on failure
  """
  @spec record_sets_list_by_type(Tesla.Env.client, String.t, String.t, String.t, String.t, String.t, keyword()) :: {:ok, Microsoft.Azure.Management.Network.Model.RecordSetListResult.t} | {:error, Tesla.Env.t}
  def record_sets_list_by_type(connection, resource_group_name, zone_name, record_type, api_version, subscription_id, opts \\ []) do
    optional_params = %{
      :"$top" => :query,
      :"$recordsetnamesuffix" => :query
    }
    %{}
    |> method(:get)
    |> url("/subscriptions/#{subscription_id}/resourceGroups/#{resource_group_name}/providers/Microsoft.Network/dnsZones/#{zone_name}/#{record_type}")
    |> add_param(:query, :"api-version", api_version)
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%Microsoft.Azure.Management.Network.Model.RecordSetListResult{})
  end

  @doc """
  Updates a record set within a DNS zone.

  ## Parameters

  - connection (Microsoft.Azure.Management.Network.Connection): Connection to server
  - resource_group_name (String.t): The name of the resource group.
  - zone_name (String.t): The name of the DNS zone (without a terminating dot).
  - relative_record_set_name (String.t): The name of the record set, relative to the name of the zone.
  - record_type (String.t): The type of DNS record in this record set.
  - parameters (RecordSet): Parameters supplied to the Update operation.
  - api_version (String.t): Specifies the API version.
  - subscription_id (String.t): Specifies the Azure subscription ID, which uniquely identifies the Microsoft Azure subscription.
  - opts (KeywordList): [optional] Optional parameters
    - :if_match (String.t): The etag of the record set. Omit this value to always overwrite the current record set. Specify the last-seen etag value to prevent accidentally overwritting concurrent changes.

  ## Returns

  {:ok, %Microsoft.Azure.Management.Network.Model.RecordSet{}} on success
  {:error, info} on failure
  """
  @spec record_sets_update(Tesla.Env.client, String.t, String.t, String.t, String.t, Microsoft.Azure.Management.Network.Model.RecordSet.t, String.t, String.t, keyword()) :: {:ok, Microsoft.Azure.Management.Network.Model.RecordSet.t} | {:error, Tesla.Env.t}
  def record_sets_update(connection, resource_group_name, zone_name, relative_record_set_name, record_type, parameters, api_version, subscription_id, opts \\ []) do
    optional_params = %{
      :"If-Match" => :headers
    }
    %{}
    |> method(:patch)
    |> url("/subscriptions/#{subscription_id}/resourceGroups/#{resource_group_name}/providers/Microsoft.Network/dnsZones/#{zone_name}/#{record_type}/#{relative_record_set_name}")
    |> add_param(:body, :"parameters", parameters)
    |> add_param(:query, :"api-version", api_version)
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%Microsoft.Azure.Management.Network.Model.RecordSet{})
  end
end
