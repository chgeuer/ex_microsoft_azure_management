# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule Microsoft.Azure.Management.Network.Api.Profiles do
  @moduledoc """
  API calls for all endpoints tagged `Profiles`.
  """

  alias Microsoft.Azure.Management.Network.Connection
  import Microsoft.Azure.Management.Network.RequestBuilder


  @doc """
  Checks the availability of a Traffic Manager Relative DNS name.

  ## Parameters

  - connection (Microsoft.Azure.Management.Network.Connection): Connection to server
  - parameters (CheckTrafficManagerRelativeDnsNameAvailabilityParameters): The Traffic Manager name parameters supplied to the CheckTrafficManagerNameAvailability operation.
  - api_version (String.t): Client Api Version.
  - opts (KeywordList): [optional] Optional parameters

  ## Returns

  {:ok, %Microsoft.Azure.Management.Network.Model.TrafficManagerNameAvailability{}} on success
  {:error, info} on failure
  """
  @spec profiles_check_traffic_manager_relative_dns_name_availability(Tesla.Env.client, Microsoft.Azure.Management.Network.Model.CheckTrafficManagerRelativeDnsNameAvailabilityParameters.t, String.t, keyword()) :: {:ok, Microsoft.Azure.Management.Network.Model.TrafficManagerNameAvailability.t} | {:error, Tesla.Env.t}
  def profiles_check_traffic_manager_relative_dns_name_availability(connection, parameters, api_version, _opts \\ []) do
    %{}
    |> method(:post)
    |> url("/providers/Microsoft.Network/checkTrafficManagerNameAvailability")
    |> add_param(:body, :"parameters", parameters)
    |> add_param(:query, :"api-version", api_version)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%Microsoft.Azure.Management.Network.Model.TrafficManagerNameAvailability{})
  end

  @doc """
  Create or update a Traffic Manager profile.

  ## Parameters

  - connection (Microsoft.Azure.Management.Network.Connection): Connection to server
  - resource_group_name (String.t): The name of the resource group containing the Traffic Manager profile.
  - profile_name (String.t): The name of the Traffic Manager profile.
  - parameters (Profile): The Traffic Manager profile parameters supplied to the CreateOrUpdate operation.
  - api_version (String.t): Client Api Version.
  - subscription_id (String.t): Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  - opts (KeywordList): [optional] Optional parameters

  ## Returns

  {:ok, %Microsoft.Azure.Management.Network.Model.Profile{}} on success
  {:error, info} on failure
  """
  @spec profiles_create_or_update(Tesla.Env.client, String.t, String.t, Microsoft.Azure.Management.Network.Model.Profile.t, String.t, String.t, keyword()) :: {:ok, Microsoft.Azure.Management.Network.Model.Profile.t} | {:error, Tesla.Env.t}
  def profiles_create_or_update(connection, resource_group_name, profile_name, parameters, api_version, subscription_id, _opts \\ []) do
    %{}
    |> method(:put)
    |> url("/subscriptions/#{subscription_id}/resourceGroups/#{resource_group_name}/providers/Microsoft.Network/trafficmanagerprofiles/#{profile_name}")
    |> add_param(:body, :"parameters", parameters)
    |> add_param(:query, :"api-version", api_version)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%Microsoft.Azure.Management.Network.Model.Profile{})
  end

  @doc """
  Deletes a Traffic Manager profile.

  ## Parameters

  - connection (Microsoft.Azure.Management.Network.Connection): Connection to server
  - resource_group_name (String.t): The name of the resource group containing the Traffic Manager profile to be deleted.
  - profile_name (String.t): The name of the Traffic Manager profile to be deleted.
  - api_version (String.t): Client Api Version.
  - subscription_id (String.t): Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  - opts (KeywordList): [optional] Optional parameters

  ## Returns

  {:ok, %Microsoft.Azure.Management.Network.Model.DeleteOperationResult{}} on success
  {:error, info} on failure
  """
  @spec profiles_delete(Tesla.Env.client, String.t, String.t, String.t, String.t, keyword()) :: {:ok, Microsoft.Azure.Management.Network.Model.DeleteOperationResult.t} | {:error, Tesla.Env.t}
  def profiles_delete(connection, resource_group_name, profile_name, api_version, subscription_id, _opts \\ []) do
    %{}
    |> method(:delete)
    |> url("/subscriptions/#{subscription_id}/resourceGroups/#{resource_group_name}/providers/Microsoft.Network/trafficmanagerprofiles/#{profile_name}")
    |> add_param(:query, :"api-version", api_version)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%Microsoft.Azure.Management.Network.Model.DeleteOperationResult{})
  end

  @doc """
  Gets a Traffic Manager profile.

  ## Parameters

  - connection (Microsoft.Azure.Management.Network.Connection): Connection to server
  - resource_group_name (String.t): The name of the resource group containing the Traffic Manager profile.
  - profile_name (String.t): The name of the Traffic Manager profile.
  - api_version (String.t): Client Api Version.
  - subscription_id (String.t): Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  - opts (KeywordList): [optional] Optional parameters

  ## Returns

  {:ok, %Microsoft.Azure.Management.Network.Model.Profile{}} on success
  {:error, info} on failure
  """
  @spec profiles_get(Tesla.Env.client, String.t, String.t, String.t, String.t, keyword()) :: {:ok, Microsoft.Azure.Management.Network.Model.Profile.t} | {:error, Tesla.Env.t}
  def profiles_get(connection, resource_group_name, profile_name, api_version, subscription_id, _opts \\ []) do
    %{}
    |> method(:get)
    |> url("/subscriptions/#{subscription_id}/resourceGroups/#{resource_group_name}/providers/Microsoft.Network/trafficmanagerprofiles/#{profile_name}")
    |> add_param(:query, :"api-version", api_version)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%Microsoft.Azure.Management.Network.Model.Profile{})
  end

  @doc """
  Lists all Traffic Manager profiles within a resource group.

  ## Parameters

  - connection (Microsoft.Azure.Management.Network.Connection): Connection to server
  - resource_group_name (String.t): The name of the resource group containing the Traffic Manager profiles to be listed.
  - api_version (String.t): Client Api Version.
  - subscription_id (String.t): Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  - opts (KeywordList): [optional] Optional parameters

  ## Returns

  {:ok, %Microsoft.Azure.Management.Network.Model.ProfileListResult{}} on success
  {:error, info} on failure
  """
  @spec profiles_list_by_resource_group(Tesla.Env.client, String.t, String.t, String.t, keyword()) :: {:ok, Microsoft.Azure.Management.Network.Model.ProfileListResult.t} | {:error, Tesla.Env.t}
  def profiles_list_by_resource_group(connection, resource_group_name, api_version, subscription_id, _opts \\ []) do
    %{}
    |> method(:get)
    |> url("/subscriptions/#{subscription_id}/resourceGroups/#{resource_group_name}/providers/Microsoft.Network/trafficmanagerprofiles")
    |> add_param(:query, :"api-version", api_version)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%Microsoft.Azure.Management.Network.Model.ProfileListResult{})
  end

  @doc """
  Lists all Traffic Manager profiles within a subscription.

  ## Parameters

  - connection (Microsoft.Azure.Management.Network.Connection): Connection to server
  - api_version (String.t): Client Api Version.
  - subscription_id (String.t): Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  - opts (KeywordList): [optional] Optional parameters

  ## Returns

  {:ok, %Microsoft.Azure.Management.Network.Model.ProfileListResult{}} on success
  {:error, info} on failure
  """
  @spec profiles_list_by_subscription(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, Microsoft.Azure.Management.Network.Model.ProfileListResult.t} | {:error, Tesla.Env.t}
  def profiles_list_by_subscription(connection, api_version, subscription_id, _opts \\ []) do
    %{}
    |> method(:get)
    |> url("/subscriptions/#{subscription_id}/providers/Microsoft.Network/trafficmanagerprofiles")
    |> add_param(:query, :"api-version", api_version)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%Microsoft.Azure.Management.Network.Model.ProfileListResult{})
  end

  @doc """
  Update a Traffic Manager profile.

  ## Parameters

  - connection (Microsoft.Azure.Management.Network.Connection): Connection to server
  - resource_group_name (String.t): The name of the resource group containing the Traffic Manager profile.
  - profile_name (String.t): The name of the Traffic Manager profile.
  - parameters (Profile): The Traffic Manager profile parameters supplied to the Update operation.
  - api_version (String.t): Client Api Version.
  - subscription_id (String.t): Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  - opts (KeywordList): [optional] Optional parameters

  ## Returns

  {:ok, %Microsoft.Azure.Management.Network.Model.Profile{}} on success
  {:error, info} on failure
  """
  @spec profiles_update(Tesla.Env.client, String.t, String.t, Microsoft.Azure.Management.Network.Model.Profile.t, String.t, String.t, keyword()) :: {:ok, Microsoft.Azure.Management.Network.Model.Profile.t} | {:error, Tesla.Env.t}
  def profiles_update(connection, resource_group_name, profile_name, parameters, api_version, subscription_id, _opts \\ []) do
    %{}
    |> method(:patch)
    |> url("/subscriptions/#{subscription_id}/resourceGroups/#{resource_group_name}/providers/Microsoft.Network/trafficmanagerprofiles/#{profile_name}")
    |> add_param(:body, :"parameters", parameters)
    |> add_param(:query, :"api-version", api_version)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%Microsoft.Azure.Management.Network.Model.Profile{})
  end
end
