# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule Microsoft.Azure.Management.Network.Api.ExpressRouteCircuitAuthorizations do
  @moduledoc """
  API calls for all endpoints tagged `ExpressRouteCircuitAuthorizations`.
  """

  alias Microsoft.Azure.Management.Network.Connection
  import Microsoft.Azure.Management.Network.RequestBuilder


  @doc """
  Creates or updates an authorization in the specified express route circuit.

  ## Parameters

  - connection (Microsoft.Azure.Management.Network.Connection): Connection to server
  - resource_group_name (String.t): The name of the resource group.
  - circuit_name (String.t): The name of the express route circuit.
  - authorization_name (String.t): The name of the authorization.
  - authorization_parameters (ExpressRouteCircuitAuthorization): Parameters supplied to the create or update express route circuit authorization operation.
  - api_version (String.t): Client API version.
  - subscription_id (String.t): The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  - opts (KeywordList): [optional] Optional parameters

  ## Returns

  {:ok, %Microsoft.Azure.Management.Network.Model.ExpressRouteCircuitAuthorization{}} on success
  {:error, info} on failure
  """
  @spec express_route_circuit_authorizations_create_or_update(Tesla.Env.client, String.t, String.t, String.t, Microsoft.Azure.Management.Network.Model.ExpressRouteCircuitAuthorization.t, String.t, String.t, keyword()) :: {:ok, Microsoft.Azure.Management.Network.Model.ExpressRouteCircuitAuthorization.t} | {:error, Tesla.Env.t}
  def express_route_circuit_authorizations_create_or_update(connection, resource_group_name, circuit_name, authorization_name, authorization_parameters, api_version, subscription_id, _opts \\ []) do
    %{}
    |> method(:put)
    |> url("/subscriptions/#{subscription_id}/resourceGroups/#{resource_group_name}/providers/Microsoft.Network/expressRouteCircuits/#{circuit_name}/authorizations/#{authorization_name}")
    |> add_param(:body, :"authorizationParameters", authorization_parameters)
    |> add_param(:query, :"api-version", api_version)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%Microsoft.Azure.Management.Network.Model.ExpressRouteCircuitAuthorization{})
  end

  @doc """
  Deletes the specified authorization from the specified express route circuit.

  ## Parameters

  - connection (Microsoft.Azure.Management.Network.Connection): Connection to server
  - resource_group_name (String.t): The name of the resource group.
  - circuit_name (String.t): The name of the express route circuit.
  - authorization_name (String.t): The name of the authorization.
  - api_version (String.t): Client API version.
  - subscription_id (String.t): The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  - opts (KeywordList): [optional] Optional parameters

  ## Returns

  {:ok, %{}} on success
  {:error, info} on failure
  """
  @spec express_route_circuit_authorizations_delete(Tesla.Env.client, String.t, String.t, String.t, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def express_route_circuit_authorizations_delete(connection, resource_group_name, circuit_name, authorization_name, api_version, subscription_id, _opts \\ []) do
    %{}
    |> method(:delete)
    |> url("/subscriptions/#{subscription_id}/resourceGroups/#{resource_group_name}/providers/Microsoft.Network/expressRouteCircuits/#{circuit_name}/authorizations/#{authorization_name}")
    |> add_param(:query, :"api-version", api_version)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(false)
  end

  @doc """
  Gets the specified authorization from the specified express route circuit.

  ## Parameters

  - connection (Microsoft.Azure.Management.Network.Connection): Connection to server
  - resource_group_name (String.t): The name of the resource group.
  - circuit_name (String.t): The name of the express route circuit.
  - authorization_name (String.t): The name of the authorization.
  - api_version (String.t): Client API version.
  - subscription_id (String.t): The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  - opts (KeywordList): [optional] Optional parameters

  ## Returns

  {:ok, %Microsoft.Azure.Management.Network.Model.ExpressRouteCircuitAuthorization{}} on success
  {:error, info} on failure
  """
  @spec express_route_circuit_authorizations_get(Tesla.Env.client, String.t, String.t, String.t, String.t, String.t, keyword()) :: {:ok, Microsoft.Azure.Management.Network.Model.ExpressRouteCircuitAuthorization.t} | {:error, Tesla.Env.t}
  def express_route_circuit_authorizations_get(connection, resource_group_name, circuit_name, authorization_name, api_version, subscription_id, _opts \\ []) do
    %{}
    |> method(:get)
    |> url("/subscriptions/#{subscription_id}/resourceGroups/#{resource_group_name}/providers/Microsoft.Network/expressRouteCircuits/#{circuit_name}/authorizations/#{authorization_name}")
    |> add_param(:query, :"api-version", api_version)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%Microsoft.Azure.Management.Network.Model.ExpressRouteCircuitAuthorization{})
  end

  @doc """
  Gets all authorizations in an express route circuit.

  ## Parameters

  - connection (Microsoft.Azure.Management.Network.Connection): Connection to server
  - resource_group_name (String.t): The name of the resource group.
  - circuit_name (String.t): The name of the circuit.
  - api_version (String.t): Client API version.
  - subscription_id (String.t): The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  - opts (KeywordList): [optional] Optional parameters

  ## Returns

  {:ok, %Microsoft.Azure.Management.Network.Model.AuthorizationListResult{}} on success
  {:error, info} on failure
  """
  @spec express_route_circuit_authorizations_list(Tesla.Env.client, String.t, String.t, String.t, String.t, keyword()) :: {:ok, Microsoft.Azure.Management.Network.Model.AuthorizationListResult.t} | {:error, Tesla.Env.t}
  def express_route_circuit_authorizations_list(connection, resource_group_name, circuit_name, api_version, subscription_id, _opts \\ []) do
    %{}
    |> method(:get)
    |> url("/subscriptions/#{subscription_id}/resourceGroups/#{resource_group_name}/providers/Microsoft.Network/expressRouteCircuits/#{circuit_name}/authorizations")
    |> add_param(:query, :"api-version", api_version)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%Microsoft.Azure.Management.Network.Model.AuthorizationListResult{})
  end
end
