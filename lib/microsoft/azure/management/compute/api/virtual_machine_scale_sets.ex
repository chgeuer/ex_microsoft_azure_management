# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule Microsoft.Azure.Management.Compute.Api.VirtualMachineScaleSets do
  @moduledoc """
  API calls for all endpoints tagged `VirtualMachineScaleSets`.
  """

  alias Microsoft.Azure.Management.Compute.Connection
  import Microsoft.Azure.Management.Compute.RequestBuilder


  @doc """
  Create or update a VM scale set.

  ## Parameters

  - connection (Microsoft.Azure.Management.Compute.Connection): Connection to server
  - resource_group_name (String.t): The name of the resource group.
  - vm_scale_set_name (String.t): The name of the VM scale set to create or update.
  - parameters (VirtualMachineScaleSet): The scale set object.
  - api_version (String.t): Client Api Version.
  - subscription_id (String.t): Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  - opts (KeywordList): [optional] Optional parameters

  ## Returns

  {:ok, %Microsoft.Azure.Management.Compute.Model.VirtualMachineScaleSet{}} on success
  {:error, info} on failure
  """
  @spec virtual_machine_scale_sets_create_or_update(Tesla.Env.client, String.t, String.t, Microsoft.Azure.Management.Compute.Model.VirtualMachineScaleSet.t, String.t, String.t, keyword()) :: {:ok, Microsoft.Azure.Management.Compute.Model.VirtualMachineScaleSet.t} | {:error, Tesla.Env.t}
  def virtual_machine_scale_sets_create_or_update(connection, resource_group_name, vm_scale_set_name, parameters, api_version, subscription_id, _opts \\ []) do
    %{}
    |> method(:put)
    |> url("/subscriptions/#{subscription_id}/resourceGroups/#{resource_group_name}/providers/Microsoft.Compute/virtualMachineScaleSets/#{vm_scale_set_name}")
    |> add_param(:body, :"parameters", parameters)
    |> add_param(:query, :"api-version", api_version)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%Microsoft.Azure.Management.Compute.Model.VirtualMachineScaleSet{})
  end

  @doc """
  Deallocates specific virtual machines in a VM scale set. Shuts down the virtual machines and releases the compute resources. You are not billed for the compute resources that this virtual machine scale set deallocates.

  ## Parameters

  - connection (Microsoft.Azure.Management.Compute.Connection): Connection to server
  - resource_group_name (String.t): The name of the resource group.
  - vm_scale_set_name (String.t): The name of the VM scale set.
  - api_version (String.t): Client Api Version.
  - subscription_id (String.t): Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  - opts (KeywordList): [optional] Optional parameters
    - :vm_instance_i_ds (VirtualMachineScaleSetVmInstanceIDs): A list of virtual machine instance IDs from the VM scale set.

  ## Returns

  {:ok, %Microsoft.Azure.Management.Compute.Model.OperationStatusResponse{}} on success
  {:error, info} on failure
  """
  @spec virtual_machine_scale_sets_deallocate(Tesla.Env.client, String.t, String.t, String.t, String.t, keyword()) :: {:ok, Microsoft.Azure.Management.Compute.Model.OperationStatusResponse.t} | {:error, Tesla.Env.t}
  def virtual_machine_scale_sets_deallocate(connection, resource_group_name, vm_scale_set_name, api_version, subscription_id, opts \\ []) do
    optional_params = %{
      :"vmInstanceIDs" => :body
    }
    %{}
    |> method(:post)
    |> url("/subscriptions/#{subscription_id}/resourceGroups/#{resource_group_name}/providers/Microsoft.Compute/virtualMachineScaleSets/#{vm_scale_set_name}/deallocate")
    |> add_param(:query, :"api-version", api_version)
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%Microsoft.Azure.Management.Compute.Model.OperationStatusResponse{})
  end

  @doc """
  Deletes a VM scale set.

  ## Parameters

  - connection (Microsoft.Azure.Management.Compute.Connection): Connection to server
  - resource_group_name (String.t): The name of the resource group.
  - vm_scale_set_name (String.t): The name of the VM scale set.
  - api_version (String.t): Client Api Version.
  - subscription_id (String.t): Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  - opts (KeywordList): [optional] Optional parameters

  ## Returns

  {:ok, %Microsoft.Azure.Management.Compute.Model.OperationStatusResponse{}} on success
  {:error, info} on failure
  """
  @spec virtual_machine_scale_sets_delete(Tesla.Env.client, String.t, String.t, String.t, String.t, keyword()) :: {:ok, Microsoft.Azure.Management.Compute.Model.OperationStatusResponse.t} | {:error, Tesla.Env.t}
  def virtual_machine_scale_sets_delete(connection, resource_group_name, vm_scale_set_name, api_version, subscription_id, _opts \\ []) do
    %{}
    |> method(:delete)
    |> url("/subscriptions/#{subscription_id}/resourceGroups/#{resource_group_name}/providers/Microsoft.Compute/virtualMachineScaleSets/#{vm_scale_set_name}")
    |> add_param(:query, :"api-version", api_version)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%Microsoft.Azure.Management.Compute.Model.OperationStatusResponse{})
  end

  @doc """
  Deletes virtual machines in a VM scale set.

  ## Parameters

  - connection (Microsoft.Azure.Management.Compute.Connection): Connection to server
  - resource_group_name (String.t): The name of the resource group.
  - vm_scale_set_name (String.t): The name of the VM scale set.
  - vm_instance_i_ds (VirtualMachineScaleSetVmInstanceRequiredIDs): A list of virtual machine instance IDs from the VM scale set.
  - api_version (String.t): Client Api Version.
  - subscription_id (String.t): Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  - opts (KeywordList): [optional] Optional parameters

  ## Returns

  {:ok, %Microsoft.Azure.Management.Compute.Model.OperationStatusResponse{}} on success
  {:error, info} on failure
  """
  @spec virtual_machine_scale_sets_delete_instances(Tesla.Env.client, String.t, String.t, Microsoft.Azure.Management.Compute.Model.VirtualMachineScaleSetVmInstanceRequiredIDs.t, String.t, String.t, keyword()) :: {:ok, Microsoft.Azure.Management.Compute.Model.OperationStatusResponse.t} | {:error, Tesla.Env.t}
  def virtual_machine_scale_sets_delete_instances(connection, resource_group_name, vm_scale_set_name, vm_instance_i_ds, api_version, subscription_id, _opts \\ []) do
    %{}
    |> method(:post)
    |> url("/subscriptions/#{subscription_id}/resourceGroups/#{resource_group_name}/providers/Microsoft.Compute/virtualMachineScaleSets/#{vm_scale_set_name}/delete")
    |> add_param(:body, :"vmInstanceIDs", vm_instance_i_ds)
    |> add_param(:query, :"api-version", api_version)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%Microsoft.Azure.Management.Compute.Model.OperationStatusResponse{})
  end

  @doc """
  Manual platform update domain walk to update virtual machines in a service fabric virtual machine scale set.

  ## Parameters

  - connection (Microsoft.Azure.Management.Compute.Connection): Connection to server
  - resource_group_name (String.t): The name of the resource group.
  - vm_scale_set_name (String.t): The name of the VM scale set.
  - api_version (String.t): Client Api Version.
  - subscription_id (String.t): Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  - platform_update_domain (integer()): The platform update domain for which a manual recovery walk is requested
  - opts (KeywordList): [optional] Optional parameters

  ## Returns

  {:ok, %Microsoft.Azure.Management.Compute.Model.RecoveryWalkResponse{}} on success
  {:error, info} on failure
  """
  @spec virtual_machine_scale_sets_force_recovery_service_fabric_platform_update_domain_walk(Tesla.Env.client, String.t, String.t, String.t, String.t, integer(), keyword()) :: {:ok, Microsoft.Azure.Management.Compute.Model.RecoveryWalkResponse.t} | {:error, Tesla.Env.t}
  def virtual_machine_scale_sets_force_recovery_service_fabric_platform_update_domain_walk(connection, resource_group_name, vm_scale_set_name, api_version, subscription_id, platform_update_domain, _opts \\ []) do
    %{}
    |> method(:post)
    |> url("/subscriptions/#{subscription_id}/resourceGroups/#{resource_group_name}/providers/Microsoft.Compute/virtualMachineScaleSets/#{vm_scale_set_name}/forceRecoveryServiceFabricPlatformUpdateDomainWalk")
    |> add_param(:query, :"api-version", api_version)
    |> add_param(:query, :"platformUpdateDomain", platform_update_domain)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%Microsoft.Azure.Management.Compute.Model.RecoveryWalkResponse{})
  end

  @doc """
  Display information about a virtual machine scale set.

  ## Parameters

  - connection (Microsoft.Azure.Management.Compute.Connection): Connection to server
  - resource_group_name (String.t): The name of the resource group.
  - vm_scale_set_name (String.t): The name of the VM scale set.
  - api_version (String.t): Client Api Version.
  - subscription_id (String.t): Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  - opts (KeywordList): [optional] Optional parameters

  ## Returns

  {:ok, %Microsoft.Azure.Management.Compute.Model.VirtualMachineScaleSet{}} on success
  {:error, info} on failure
  """
  @spec virtual_machine_scale_sets_get(Tesla.Env.client, String.t, String.t, String.t, String.t, keyword()) :: {:ok, Microsoft.Azure.Management.Compute.Model.VirtualMachineScaleSet.t} | {:error, Tesla.Env.t}
  def virtual_machine_scale_sets_get(connection, resource_group_name, vm_scale_set_name, api_version, subscription_id, _opts \\ []) do
    %{}
    |> method(:get)
    |> url("/subscriptions/#{subscription_id}/resourceGroups/#{resource_group_name}/providers/Microsoft.Compute/virtualMachineScaleSets/#{vm_scale_set_name}")
    |> add_param(:query, :"api-version", api_version)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%Microsoft.Azure.Management.Compute.Model.VirtualMachineScaleSet{})
  end

  @doc """
  Gets the status of a VM scale set instance.

  ## Parameters

  - connection (Microsoft.Azure.Management.Compute.Connection): Connection to server
  - resource_group_name (String.t): The name of the resource group.
  - vm_scale_set_name (String.t): The name of the VM scale set.
  - api_version (String.t): Client Api Version.
  - subscription_id (String.t): Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  - opts (KeywordList): [optional] Optional parameters

  ## Returns

  {:ok, %Microsoft.Azure.Management.Compute.Model.VirtualMachineScaleSetInstanceView{}} on success
  {:error, info} on failure
  """
  @spec virtual_machine_scale_sets_get_instance_view(Tesla.Env.client, String.t, String.t, String.t, String.t, keyword()) :: {:ok, Microsoft.Azure.Management.Compute.Model.VirtualMachineScaleSetInstanceView.t} | {:error, Tesla.Env.t}
  def virtual_machine_scale_sets_get_instance_view(connection, resource_group_name, vm_scale_set_name, api_version, subscription_id, _opts \\ []) do
    %{}
    |> method(:get)
    |> url("/subscriptions/#{subscription_id}/resourceGroups/#{resource_group_name}/providers/Microsoft.Compute/virtualMachineScaleSets/#{vm_scale_set_name}/instanceView")
    |> add_param(:query, :"api-version", api_version)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%Microsoft.Azure.Management.Compute.Model.VirtualMachineScaleSetInstanceView{})
  end

  @doc """
  Gets list of OS upgrades on a VM scale set instance.

  ## Parameters

  - connection (Microsoft.Azure.Management.Compute.Connection): Connection to server
  - resource_group_name (String.t): The name of the resource group.
  - vm_scale_set_name (String.t): The name of the VM scale set.
  - api_version (String.t): Client Api Version.
  - subscription_id (String.t): Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  - opts (KeywordList): [optional] Optional parameters

  ## Returns

  {:ok, %Microsoft.Azure.Management.Compute.Model.VirtualMachineScaleSetListOsUpgradeHistory{}} on success
  {:error, info} on failure
  """
  @spec virtual_machine_scale_sets_get_os_upgrade_history(Tesla.Env.client, String.t, String.t, String.t, String.t, keyword()) :: {:ok, Microsoft.Azure.Management.Compute.Model.VirtualMachineScaleSetListOsUpgradeHistory.t} | {:error, Tesla.Env.t}
  def virtual_machine_scale_sets_get_os_upgrade_history(connection, resource_group_name, vm_scale_set_name, api_version, subscription_id, _opts \\ []) do
    %{}
    |> method(:get)
    |> url("/subscriptions/#{subscription_id}/resourceGroups/#{resource_group_name}/providers/Microsoft.Compute/virtualMachineScaleSets/#{vm_scale_set_name}/osUpgradeHistory")
    |> add_param(:query, :"api-version", api_version)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%Microsoft.Azure.Management.Compute.Model.VirtualMachineScaleSetListOsUpgradeHistory{})
  end

  @doc """
  Gets a list of all VM scale sets under a resource group.

  ## Parameters

  - connection (Microsoft.Azure.Management.Compute.Connection): Connection to server
  - resource_group_name (String.t): The name of the resource group.
  - api_version (String.t): Client Api Version.
  - subscription_id (String.t): Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  - opts (KeywordList): [optional] Optional parameters

  ## Returns

  {:ok, %Microsoft.Azure.Management.Compute.Model.VirtualMachineScaleSetListResult{}} on success
  {:error, info} on failure
  """
  @spec virtual_machine_scale_sets_list(Tesla.Env.client, String.t, String.t, String.t, keyword()) :: {:ok, Microsoft.Azure.Management.Compute.Model.VirtualMachineScaleSetListResult.t} | {:error, Tesla.Env.t}
  def virtual_machine_scale_sets_list(connection, resource_group_name, api_version, subscription_id, _opts \\ []) do
    %{}
    |> method(:get)
    |> url("/subscriptions/#{subscription_id}/resourceGroups/#{resource_group_name}/providers/Microsoft.Compute/virtualMachineScaleSets")
    |> add_param(:query, :"api-version", api_version)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%Microsoft.Azure.Management.Compute.Model.VirtualMachineScaleSetListResult{})
  end

  @doc """
  Gets a list of all VM Scale Sets in the subscription, regardless of the associated resource group. Use nextLink property in the response to get the next page of VM Scale Sets. Do this till nextLink is null to fetch all the VM Scale Sets.

  ## Parameters

  - connection (Microsoft.Azure.Management.Compute.Connection): Connection to server
  - api_version (String.t): Client Api Version.
  - subscription_id (String.t): Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  - opts (KeywordList): [optional] Optional parameters

  ## Returns

  {:ok, %Microsoft.Azure.Management.Compute.Model.VirtualMachineScaleSetListWithLinkResult{}} on success
  {:error, info} on failure
  """
  @spec virtual_machine_scale_sets_list_all(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, Microsoft.Azure.Management.Compute.Model.VirtualMachineScaleSetListWithLinkResult.t} | {:error, Tesla.Env.t}
  def virtual_machine_scale_sets_list_all(connection, api_version, subscription_id, _opts \\ []) do
    %{}
    |> method(:get)
    |> url("/subscriptions/#{subscription_id}/providers/Microsoft.Compute/virtualMachineScaleSets")
    |> add_param(:query, :"api-version", api_version)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%Microsoft.Azure.Management.Compute.Model.VirtualMachineScaleSetListWithLinkResult{})
  end

  @doc """
  Gets a list of SKUs available for your VM scale set, including the minimum and maximum VM instances allowed for each SKU.

  ## Parameters

  - connection (Microsoft.Azure.Management.Compute.Connection): Connection to server
  - resource_group_name (String.t): The name of the resource group.
  - vm_scale_set_name (String.t): The name of the VM scale set.
  - api_version (String.t): Client Api Version.
  - subscription_id (String.t): Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  - opts (KeywordList): [optional] Optional parameters

  ## Returns

  {:ok, %Microsoft.Azure.Management.Compute.Model.VirtualMachineScaleSetListSkusResult{}} on success
  {:error, info} on failure
  """
  @spec virtual_machine_scale_sets_list_skus(Tesla.Env.client, String.t, String.t, String.t, String.t, keyword()) :: {:ok, Microsoft.Azure.Management.Compute.Model.VirtualMachineScaleSetListSkusResult.t} | {:error, Tesla.Env.t}
  def virtual_machine_scale_sets_list_skus(connection, resource_group_name, vm_scale_set_name, api_version, subscription_id, _opts \\ []) do
    %{}
    |> method(:get)
    |> url("/subscriptions/#{subscription_id}/resourceGroups/#{resource_group_name}/providers/Microsoft.Compute/virtualMachineScaleSets/#{vm_scale_set_name}/skus")
    |> add_param(:query, :"api-version", api_version)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%Microsoft.Azure.Management.Compute.Model.VirtualMachineScaleSetListSkusResult{})
  end

  @doc """
  Perform maintenance on one or more virtual machines in a VM scale set.

  ## Parameters

  - connection (Microsoft.Azure.Management.Compute.Connection): Connection to server
  - resource_group_name (String.t): The name of the resource group.
  - vm_scale_set_name (String.t): The name of the VM scale set.
  - api_version (String.t): Client Api Version.
  - subscription_id (String.t): Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  - opts (KeywordList): [optional] Optional parameters
    - :vm_instance_i_ds (VirtualMachineScaleSetVmInstanceIDs): A list of virtual machine instance IDs from the VM scale set.

  ## Returns

  {:ok, %Microsoft.Azure.Management.Compute.Model.OperationStatusResponse{}} on success
  {:error, info} on failure
  """
  @spec virtual_machine_scale_sets_perform_maintenance(Tesla.Env.client, String.t, String.t, String.t, String.t, keyword()) :: {:ok, Microsoft.Azure.Management.Compute.Model.OperationStatusResponse.t} | {:error, Tesla.Env.t}
  def virtual_machine_scale_sets_perform_maintenance(connection, resource_group_name, vm_scale_set_name, api_version, subscription_id, opts \\ []) do
    optional_params = %{
      :"vmInstanceIDs" => :body
    }
    %{}
    |> method(:post)
    |> url("/subscriptions/#{subscription_id}/resourceGroups/#{resource_group_name}/providers/Microsoft.Compute/virtualMachineScaleSets/#{vm_scale_set_name}/performMaintenance")
    |> add_param(:query, :"api-version", api_version)
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%Microsoft.Azure.Management.Compute.Model.OperationStatusResponse{})
  end

  @doc """
  Power off (stop) one or more virtual machines in a VM scale set. Note that resources are still attached and you are getting charged for the resources. Instead, use deallocate to release resources and avoid charges.

  ## Parameters

  - connection (Microsoft.Azure.Management.Compute.Connection): Connection to server
  - resource_group_name (String.t): The name of the resource group.
  - vm_scale_set_name (String.t): The name of the VM scale set.
  - api_version (String.t): Client Api Version.
  - subscription_id (String.t): Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  - opts (KeywordList): [optional] Optional parameters
    - :vm_instance_i_ds (VirtualMachineScaleSetVmInstanceIDs): A list of virtual machine instance IDs from the VM scale set.

  ## Returns

  {:ok, %Microsoft.Azure.Management.Compute.Model.OperationStatusResponse{}} on success
  {:error, info} on failure
  """
  @spec virtual_machine_scale_sets_power_off(Tesla.Env.client, String.t, String.t, String.t, String.t, keyword()) :: {:ok, Microsoft.Azure.Management.Compute.Model.OperationStatusResponse.t} | {:error, Tesla.Env.t}
  def virtual_machine_scale_sets_power_off(connection, resource_group_name, vm_scale_set_name, api_version, subscription_id, opts \\ []) do
    optional_params = %{
      :"vmInstanceIDs" => :body
    }
    %{}
    |> method(:post)
    |> url("/subscriptions/#{subscription_id}/resourceGroups/#{resource_group_name}/providers/Microsoft.Compute/virtualMachineScaleSets/#{vm_scale_set_name}/poweroff")
    |> add_param(:query, :"api-version", api_version)
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%Microsoft.Azure.Management.Compute.Model.OperationStatusResponse{})
  end

  @doc """
  Redeploy one or more virtual machines in a VM scale set.

  ## Parameters

  - connection (Microsoft.Azure.Management.Compute.Connection): Connection to server
  - resource_group_name (String.t): The name of the resource group.
  - vm_scale_set_name (String.t): The name of the VM scale set.
  - api_version (String.t): Client Api Version.
  - subscription_id (String.t): Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  - opts (KeywordList): [optional] Optional parameters
    - :vm_instance_i_ds (VirtualMachineScaleSetVmInstanceIDs): A list of virtual machine instance IDs from the VM scale set.

  ## Returns

  {:ok, %Microsoft.Azure.Management.Compute.Model.OperationStatusResponse{}} on success
  {:error, info} on failure
  """
  @spec virtual_machine_scale_sets_redeploy(Tesla.Env.client, String.t, String.t, String.t, String.t, keyword()) :: {:ok, Microsoft.Azure.Management.Compute.Model.OperationStatusResponse.t} | {:error, Tesla.Env.t}
  def virtual_machine_scale_sets_redeploy(connection, resource_group_name, vm_scale_set_name, api_version, subscription_id, opts \\ []) do
    optional_params = %{
      :"vmInstanceIDs" => :body
    }
    %{}
    |> method(:post)
    |> url("/subscriptions/#{subscription_id}/resourceGroups/#{resource_group_name}/providers/Microsoft.Compute/virtualMachineScaleSets/#{vm_scale_set_name}/redeploy")
    |> add_param(:query, :"api-version", api_version)
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%Microsoft.Azure.Management.Compute.Model.OperationStatusResponse{})
  end

  @doc """
  Reimages (upgrade the operating system) one or more virtual machines in a VM scale set.

  ## Parameters

  - connection (Microsoft.Azure.Management.Compute.Connection): Connection to server
  - resource_group_name (String.t): The name of the resource group.
  - vm_scale_set_name (String.t): The name of the VM scale set.
  - api_version (String.t): Client Api Version.
  - subscription_id (String.t): Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  - opts (KeywordList): [optional] Optional parameters
    - :vm_instance_i_ds (VirtualMachineScaleSetVmInstanceIDs): A list of virtual machine instance IDs from the VM scale set.

  ## Returns

  {:ok, %Microsoft.Azure.Management.Compute.Model.OperationStatusResponse{}} on success
  {:error, info} on failure
  """
  @spec virtual_machine_scale_sets_reimage(Tesla.Env.client, String.t, String.t, String.t, String.t, keyword()) :: {:ok, Microsoft.Azure.Management.Compute.Model.OperationStatusResponse.t} | {:error, Tesla.Env.t}
  def virtual_machine_scale_sets_reimage(connection, resource_group_name, vm_scale_set_name, api_version, subscription_id, opts \\ []) do
    optional_params = %{
      :"vmInstanceIDs" => :body
    }
    %{}
    |> method(:post)
    |> url("/subscriptions/#{subscription_id}/resourceGroups/#{resource_group_name}/providers/Microsoft.Compute/virtualMachineScaleSets/#{vm_scale_set_name}/reimage")
    |> add_param(:query, :"api-version", api_version)
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%Microsoft.Azure.Management.Compute.Model.OperationStatusResponse{})
  end

  @doc """
  Reimages all the disks ( including data disks ) in the virtual machines in a VM scale set. This operation is only supported for managed disks.

  ## Parameters

  - connection (Microsoft.Azure.Management.Compute.Connection): Connection to server
  - resource_group_name (String.t): The name of the resource group.
  - vm_scale_set_name (String.t): The name of the VM scale set.
  - api_version (String.t): Client Api Version.
  - subscription_id (String.t): Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  - opts (KeywordList): [optional] Optional parameters
    - :vm_instance_i_ds (VirtualMachineScaleSetVmInstanceIDs): A list of virtual machine instance IDs from the VM scale set.

  ## Returns

  {:ok, %Microsoft.Azure.Management.Compute.Model.OperationStatusResponse{}} on success
  {:error, info} on failure
  """
  @spec virtual_machine_scale_sets_reimage_all(Tesla.Env.client, String.t, String.t, String.t, String.t, keyword()) :: {:ok, Microsoft.Azure.Management.Compute.Model.OperationStatusResponse.t} | {:error, Tesla.Env.t}
  def virtual_machine_scale_sets_reimage_all(connection, resource_group_name, vm_scale_set_name, api_version, subscription_id, opts \\ []) do
    optional_params = %{
      :"vmInstanceIDs" => :body
    }
    %{}
    |> method(:post)
    |> url("/subscriptions/#{subscription_id}/resourceGroups/#{resource_group_name}/providers/Microsoft.Compute/virtualMachineScaleSets/#{vm_scale_set_name}/reimageall")
    |> add_param(:query, :"api-version", api_version)
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%Microsoft.Azure.Management.Compute.Model.OperationStatusResponse{})
  end

  @doc """
  Restarts one or more virtual machines in a VM scale set.

  ## Parameters

  - connection (Microsoft.Azure.Management.Compute.Connection): Connection to server
  - resource_group_name (String.t): The name of the resource group.
  - vm_scale_set_name (String.t): The name of the VM scale set.
  - api_version (String.t): Client Api Version.
  - subscription_id (String.t): Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  - opts (KeywordList): [optional] Optional parameters
    - :vm_instance_i_ds (VirtualMachineScaleSetVmInstanceIDs): A list of virtual machine instance IDs from the VM scale set.

  ## Returns

  {:ok, %Microsoft.Azure.Management.Compute.Model.OperationStatusResponse{}} on success
  {:error, info} on failure
  """
  @spec virtual_machine_scale_sets_restart(Tesla.Env.client, String.t, String.t, String.t, String.t, keyword()) :: {:ok, Microsoft.Azure.Management.Compute.Model.OperationStatusResponse.t} | {:error, Tesla.Env.t}
  def virtual_machine_scale_sets_restart(connection, resource_group_name, vm_scale_set_name, api_version, subscription_id, opts \\ []) do
    optional_params = %{
      :"vmInstanceIDs" => :body
    }
    %{}
    |> method(:post)
    |> url("/subscriptions/#{subscription_id}/resourceGroups/#{resource_group_name}/providers/Microsoft.Compute/virtualMachineScaleSets/#{vm_scale_set_name}/restart")
    |> add_param(:query, :"api-version", api_version)
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%Microsoft.Azure.Management.Compute.Model.OperationStatusResponse{})
  end

  @doc """
  Starts one or more virtual machines in a VM scale set.

  ## Parameters

  - connection (Microsoft.Azure.Management.Compute.Connection): Connection to server
  - resource_group_name (String.t): The name of the resource group.
  - vm_scale_set_name (String.t): The name of the VM scale set.
  - api_version (String.t): Client Api Version.
  - subscription_id (String.t): Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  - opts (KeywordList): [optional] Optional parameters
    - :vm_instance_i_ds (VirtualMachineScaleSetVmInstanceIDs): A list of virtual machine instance IDs from the VM scale set.

  ## Returns

  {:ok, %Microsoft.Azure.Management.Compute.Model.OperationStatusResponse{}} on success
  {:error, info} on failure
  """
  @spec virtual_machine_scale_sets_start(Tesla.Env.client, String.t, String.t, String.t, String.t, keyword()) :: {:ok, Microsoft.Azure.Management.Compute.Model.OperationStatusResponse.t} | {:error, Tesla.Env.t}
  def virtual_machine_scale_sets_start(connection, resource_group_name, vm_scale_set_name, api_version, subscription_id, opts \\ []) do
    optional_params = %{
      :"vmInstanceIDs" => :body
    }
    %{}
    |> method(:post)
    |> url("/subscriptions/#{subscription_id}/resourceGroups/#{resource_group_name}/providers/Microsoft.Compute/virtualMachineScaleSets/#{vm_scale_set_name}/start")
    |> add_param(:query, :"api-version", api_version)
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%Microsoft.Azure.Management.Compute.Model.OperationStatusResponse{})
  end

  @doc """
  Update a VM scale set.

  ## Parameters

  - connection (Microsoft.Azure.Management.Compute.Connection): Connection to server
  - resource_group_name (String.t): The name of the resource group.
  - vm_scale_set_name (String.t): The name of the VM scale set to create or update.
  - parameters (VirtualMachineScaleSetUpdate): The scale set object.
  - api_version (String.t): Client Api Version.
  - subscription_id (String.t): Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  - opts (KeywordList): [optional] Optional parameters

  ## Returns

  {:ok, %Microsoft.Azure.Management.Compute.Model.VirtualMachineScaleSet{}} on success
  {:error, info} on failure
  """
  @spec virtual_machine_scale_sets_update(Tesla.Env.client, String.t, String.t, Microsoft.Azure.Management.Compute.Model.VirtualMachineScaleSetUpdate.t, String.t, String.t, keyword()) :: {:ok, Microsoft.Azure.Management.Compute.Model.VirtualMachineScaleSet.t} | {:error, Tesla.Env.t}
  def virtual_machine_scale_sets_update(connection, resource_group_name, vm_scale_set_name, parameters, api_version, subscription_id, _opts \\ []) do
    %{}
    |> method(:patch)
    |> url("/subscriptions/#{subscription_id}/resourceGroups/#{resource_group_name}/providers/Microsoft.Compute/virtualMachineScaleSets/#{vm_scale_set_name}")
    |> add_param(:body, :"parameters", parameters)
    |> add_param(:query, :"api-version", api_version)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%Microsoft.Azure.Management.Compute.Model.VirtualMachineScaleSet{})
  end

  @doc """
  Upgrades one or more virtual machines to the latest SKU set in the VM scale set model.

  ## Parameters

  - connection (Microsoft.Azure.Management.Compute.Connection): Connection to server
  - resource_group_name (String.t): The name of the resource group.
  - vm_scale_set_name (String.t): The name of the VM scale set.
  - vm_instance_i_ds (VirtualMachineScaleSetVmInstanceRequiredIDs): A list of virtual machine instance IDs from the VM scale set.
  - api_version (String.t): Client Api Version.
  - subscription_id (String.t): Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  - opts (KeywordList): [optional] Optional parameters

  ## Returns

  {:ok, %Microsoft.Azure.Management.Compute.Model.OperationStatusResponse{}} on success
  {:error, info} on failure
  """
  @spec virtual_machine_scale_sets_update_instances(Tesla.Env.client, String.t, String.t, Microsoft.Azure.Management.Compute.Model.VirtualMachineScaleSetVmInstanceRequiredIDs.t, String.t, String.t, keyword()) :: {:ok, Microsoft.Azure.Management.Compute.Model.OperationStatusResponse.t} | {:error, Tesla.Env.t}
  def virtual_machine_scale_sets_update_instances(connection, resource_group_name, vm_scale_set_name, vm_instance_i_ds, api_version, subscription_id, _opts \\ []) do
    %{}
    |> method(:post)
    |> url("/subscriptions/#{subscription_id}/resourceGroups/#{resource_group_name}/providers/Microsoft.Compute/virtualMachineScaleSets/#{vm_scale_set_name}/manualupgrade")
    |> add_param(:body, :"vmInstanceIDs", vm_instance_i_ds)
    |> add_param(:query, :"api-version", api_version)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%Microsoft.Azure.Management.Compute.Model.OperationStatusResponse{})
  end
end
