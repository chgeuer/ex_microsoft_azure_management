# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule Microsoft.Azure.Management.Database.PostgreSql.Api.LogFiles do
  @moduledoc """
  API calls for all endpoints tagged `LogFiles`.
  """

  alias Microsoft.Azure.Management.Database.PostgreSql.Connection
  import Microsoft.Azure.Management.Database.PostgreSql.RequestBuilder


  @doc """
  List all the log files in a given server.

  ## Parameters

  - connection (Microsoft.Azure.Management.Database.PostgreSql.Connection): Connection to server
  - api_version (String.t): The API version to use for the request.
  - subscription_id (String.t): The subscription ID that identifies an Azure subscription.
  - resource_group_name (String.t): The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.
  - server_name (String.t): The name of the server.
  - opts (KeywordList): [optional] Optional parameters

  ## Returns

  {:ok, %Microsoft.Azure.Management.Database.PostgreSql.Model.LogFileListResult{}} on success
  {:error, info} on failure
  """
  @spec log_files_list_by_server(Tesla.Env.client, String.t, String.t, String.t, String.t, keyword()) :: {:ok, Microsoft.Azure.Management.Database.PostgreSql.Model.LogFileListResult.t} | {:error, Tesla.Env.t}
  def log_files_list_by_server(connection, api_version, subscription_id, resource_group_name, server_name, _opts \\ []) do
    %{}
    |> method(:get)
    |> url("/subscriptions/#{subscription_id}/resourceGroups/#{resource_group_name}/providers/Microsoft.DBforPostgreSQL/servers/#{server_name}/logFiles")
    |> add_param(:query, :"api-version", api_version)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%Microsoft.Azure.Management.Database.PostgreSql.Model.LogFileListResult{})
  end
end
