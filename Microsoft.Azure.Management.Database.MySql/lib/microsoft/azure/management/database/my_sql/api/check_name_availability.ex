# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule Microsoft.Azure.Management.Database.MySql.Api.CheckNameAvailability do
  @moduledoc """
  API calls for all endpoints tagged `CheckNameAvailability`.
  """

  alias Microsoft.Azure.Management.Database.MySql.Connection
  import Microsoft.Azure.Management.Database.MySql.RequestBuilder


  @doc """
  Check the availability of name for resource

  ## Parameters

  - connection (Microsoft.Azure.Management.Database.MySql.Connection): Connection to server
  - api_version (String.t): The API version to use for the request.
  - subscription_id (String.t): The subscription ID that identifies an Azure subscription.
  - name_availability_request (NameAvailabilityRequest): The required parameters for checking if resource name is available.
  - opts (KeywordList): [optional] Optional parameters

  ## Returns

  {:ok, %Microsoft.Azure.Management.Database.MySql.Model.NameAvailability{}} on success
  {:error, info} on failure
  """
  @spec check_name_availability_execute(Tesla.Env.client, String.t, String.t, Microsoft.Azure.Management.Database.MySql.Model.NameAvailabilityRequest.t, keyword()) :: {:ok, Microsoft.Azure.Management.Database.MySql.Model.NameAvailability.t} | {:error, Tesla.Env.t}
  def check_name_availability_execute(connection, api_version, subscription_id, name_availability_request, _opts \\ []) do
    %{}
    |> method(:post)
    |> url("/subscriptions/#{subscription_id}/providers/Microsoft.DBforMySQL/checkNameAvailability")
    |> add_param(:query, :"api-version", api_version)
    |> add_param(:body, :body, name_availability_request)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%Microsoft.Azure.Management.Database.MySql.Model.NameAvailability{})
  end
end
