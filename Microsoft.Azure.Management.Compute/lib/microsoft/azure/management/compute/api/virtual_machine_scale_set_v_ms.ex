# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule Microsoft.Azure.Management.Compute.Api.VirtualMachineScaleSetVMs do
  @moduledoc """
  API calls for all endpoints tagged `VirtualMachineScaleSetVMs`.
  """

  alias Microsoft.Azure.Management.Compute.Connection
  import Microsoft.Azure.Management.Compute.RequestBuilder


  @doc """
  Deallocates a specific virtual machine in a VM scale set. Shuts down the virtual machine and releases the compute resources it uses. You are not billed for the compute resources of this virtual machine once it is deallocated.

  ## Parameters

  - connection (Microsoft.Azure.Management.Compute.Connection): Connection to server
  - resource_group_name (String.t): The name of the resource group.
  - vm_scale_set_name (String.t): The name of the VM scale set.
  - instance_id (String.t): The instance ID of the virtual machine.
  - api_version (String.t): Client Api Version.
  - subscription_id (String.t): Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  - opts (KeywordList): [optional] Optional parameters

  ## Returns

  {:ok, %Microsoft.Azure.Management.Compute.Model.OperationStatusResponse{}} on success
  {:error, info} on failure
  """
  @spec virtual_machine_scale_set_v_ms_deallocate(Tesla.Env.client, String.t, String.t, String.t, String.t, String.t, keyword()) :: {:ok, Microsoft.Azure.Management.Compute.Model.OperationStatusResponse.t} | {:error, Tesla.Env.t}
  def virtual_machine_scale_set_v_ms_deallocate(connection, resource_group_name, vm_scale_set_name, instance_id, api_version, subscription_id, _opts \\ []) do
    %{}
    |> method(:post)
    |> url("/subscriptions/#{subscription_id}/resourceGroups/#{resource_group_name}/providers/Microsoft.Compute/virtualMachineScaleSets/#{vm_scale_set_name}/virtualmachines/#{instance_id}/deallocate")
    |> add_param(:query, :"api-version", api_version)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%Microsoft.Azure.Management.Compute.Model.OperationStatusResponse{})
  end

  @doc """
  Deletes a virtual machine from a VM scale set.

  ## Parameters

  - connection (Microsoft.Azure.Management.Compute.Connection): Connection to server
  - resource_group_name (String.t): The name of the resource group.
  - vm_scale_set_name (String.t): The name of the VM scale set.
  - instance_id (String.t): The instance ID of the virtual machine.
  - api_version (String.t): Client Api Version.
  - subscription_id (String.t): Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  - opts (KeywordList): [optional] Optional parameters

  ## Returns

  {:ok, %Microsoft.Azure.Management.Compute.Model.OperationStatusResponse{}} on success
  {:error, info} on failure
  """
  @spec virtual_machine_scale_set_v_ms_delete(Tesla.Env.client, String.t, String.t, String.t, String.t, String.t, keyword()) :: {:ok, Microsoft.Azure.Management.Compute.Model.OperationStatusResponse.t} | {:error, Tesla.Env.t}
  def virtual_machine_scale_set_v_ms_delete(connection, resource_group_name, vm_scale_set_name, instance_id, api_version, subscription_id, _opts \\ []) do
    %{}
    |> method(:delete)
    |> url("/subscriptions/#{subscription_id}/resourceGroups/#{resource_group_name}/providers/Microsoft.Compute/virtualMachineScaleSets/#{vm_scale_set_name}/virtualmachines/#{instance_id}")
    |> add_param(:query, :"api-version", api_version)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%Microsoft.Azure.Management.Compute.Model.OperationStatusResponse{})
  end

  @doc """
  Gets a virtual machine from a VM scale set.

  ## Parameters

  - connection (Microsoft.Azure.Management.Compute.Connection): Connection to server
  - resource_group_name (String.t): The name of the resource group.
  - vm_scale_set_name (String.t): The name of the VM scale set.
  - instance_id (String.t): The instance ID of the virtual machine.
  - api_version (String.t): Client Api Version.
  - subscription_id (String.t): Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  - opts (KeywordList): [optional] Optional parameters

  ## Returns

  {:ok, %Microsoft.Azure.Management.Compute.Model.VirtualMachineScaleSetVm{}} on success
  {:error, info} on failure
  """
  @spec virtual_machine_scale_set_v_ms_get(Tesla.Env.client, String.t, String.t, String.t, String.t, String.t, keyword()) :: {:ok, Microsoft.Azure.Management.Compute.Model.VirtualMachineScaleSetVm.t} | {:error, Tesla.Env.t}
  def virtual_machine_scale_set_v_ms_get(connection, resource_group_name, vm_scale_set_name, instance_id, api_version, subscription_id, _opts \\ []) do
    %{}
    |> method(:get)
    |> url("/subscriptions/#{subscription_id}/resourceGroups/#{resource_group_name}/providers/Microsoft.Compute/virtualMachineScaleSets/#{vm_scale_set_name}/virtualmachines/#{instance_id}")
    |> add_param(:query, :"api-version", api_version)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%Microsoft.Azure.Management.Compute.Model.VirtualMachineScaleSetVm{})
  end

  @doc """
  Gets the status of a virtual machine from a VM scale set.

  ## Parameters

  - connection (Microsoft.Azure.Management.Compute.Connection): Connection to server
  - resource_group_name (String.t): The name of the resource group.
  - vm_scale_set_name (String.t): The name of the VM scale set.
  - instance_id (String.t): The instance ID of the virtual machine.
  - api_version (String.t): Client Api Version.
  - subscription_id (String.t): Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  - opts (KeywordList): [optional] Optional parameters

  ## Returns

  {:ok, %Microsoft.Azure.Management.Compute.Model.VirtualMachineScaleSetVmInstanceView{}} on success
  {:error, info} on failure
  """
  @spec virtual_machine_scale_set_v_ms_get_instance_view(Tesla.Env.client, String.t, String.t, String.t, String.t, String.t, keyword()) :: {:ok, Microsoft.Azure.Management.Compute.Model.VirtualMachineScaleSetVmInstanceView.t} | {:error, Tesla.Env.t}
  def virtual_machine_scale_set_v_ms_get_instance_view(connection, resource_group_name, vm_scale_set_name, instance_id, api_version, subscription_id, _opts \\ []) do
    %{}
    |> method(:get)
    |> url("/subscriptions/#{subscription_id}/resourceGroups/#{resource_group_name}/providers/Microsoft.Compute/virtualMachineScaleSets/#{vm_scale_set_name}/virtualmachines/#{instance_id}/instanceView")
    |> add_param(:query, :"api-version", api_version)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%Microsoft.Azure.Management.Compute.Model.VirtualMachineScaleSetVmInstanceView{})
  end

  @doc """
  Gets a list of all virtual machines in a VM scale sets.

  ## Parameters

  - connection (Microsoft.Azure.Management.Compute.Connection): Connection to server
  - resource_group_name (String.t): The name of the resource group.
  - virtual_machine_scale_set_name (String.t): The name of the VM scale set.
  - api_version (String.t): Client Api Version.
  - subscription_id (String.t): Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  - opts (KeywordList): [optional] Optional parameters
    - :__filter (String.t): The filter to apply to the operation.
    - :__select (String.t): The list parameters.
    - :__expand (String.t): The expand expression to apply to the operation.

  ## Returns

  {:ok, %Microsoft.Azure.Management.Compute.Model.VirtualMachineScaleSetVmListResult{}} on success
  {:error, info} on failure
  """
  @spec virtual_machine_scale_set_v_ms_list(Tesla.Env.client, String.t, String.t, String.t, String.t, keyword()) :: {:ok, Microsoft.Azure.Management.Compute.Model.VirtualMachineScaleSetVmListResult.t} | {:error, Tesla.Env.t}
  def virtual_machine_scale_set_v_ms_list(connection, resource_group_name, virtual_machine_scale_set_name, api_version, subscription_id, opts \\ []) do
    optional_params = %{
      :"$filter" => :query,
      :"$select" => :query,
      :"$expand" => :query
    }
    %{}
    |> method(:get)
    |> url("/subscriptions/#{subscription_id}/resourceGroups/#{resource_group_name}/providers/Microsoft.Compute/virtualMachineScaleSets/#{virtual_machine_scale_set_name}/virtualMachines")
    |> add_param(:query, :"api-version", api_version)
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%Microsoft.Azure.Management.Compute.Model.VirtualMachineScaleSetVmListResult{})
  end

  @doc """
  Performs maintenance on a virtual machine in a VM scale set.

  ## Parameters

  - connection (Microsoft.Azure.Management.Compute.Connection): Connection to server
  - resource_group_name (String.t): The name of the resource group.
  - vm_scale_set_name (String.t): The name of the VM scale set.
  - instance_id (String.t): The instance ID of the virtual machine.
  - api_version (String.t): Client Api Version.
  - subscription_id (String.t): Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  - opts (KeywordList): [optional] Optional parameters

  ## Returns

  {:ok, %Microsoft.Azure.Management.Compute.Model.OperationStatusResponse{}} on success
  {:error, info} on failure
  """
  @spec virtual_machine_scale_set_v_ms_perform_maintenance(Tesla.Env.client, String.t, String.t, String.t, String.t, String.t, keyword()) :: {:ok, Microsoft.Azure.Management.Compute.Model.OperationStatusResponse.t} | {:error, Tesla.Env.t}
  def virtual_machine_scale_set_v_ms_perform_maintenance(connection, resource_group_name, vm_scale_set_name, instance_id, api_version, subscription_id, _opts \\ []) do
    %{}
    |> method(:post)
    |> url("/subscriptions/#{subscription_id}/resourceGroups/#{resource_group_name}/providers/Microsoft.Compute/virtualMachineScaleSets/#{vm_scale_set_name}/virtualmachines/#{instance_id}/performMaintenance")
    |> add_param(:query, :"api-version", api_version)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%Microsoft.Azure.Management.Compute.Model.OperationStatusResponse{})
  end

  @doc """
  Power off (stop) a virtual machine in a VM scale set. Note that resources are still attached and you are getting charged for the resources. Instead, use deallocate to release resources and avoid charges.

  ## Parameters

  - connection (Microsoft.Azure.Management.Compute.Connection): Connection to server
  - resource_group_name (String.t): The name of the resource group.
  - vm_scale_set_name (String.t): The name of the VM scale set.
  - instance_id (String.t): The instance ID of the virtual machine.
  - api_version (String.t): Client Api Version.
  - subscription_id (String.t): Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  - opts (KeywordList): [optional] Optional parameters

  ## Returns

  {:ok, %Microsoft.Azure.Management.Compute.Model.OperationStatusResponse{}} on success
  {:error, info} on failure
  """
  @spec virtual_machine_scale_set_v_ms_power_off(Tesla.Env.client, String.t, String.t, String.t, String.t, String.t, keyword()) :: {:ok, Microsoft.Azure.Management.Compute.Model.OperationStatusResponse.t} | {:error, Tesla.Env.t}
  def virtual_machine_scale_set_v_ms_power_off(connection, resource_group_name, vm_scale_set_name, instance_id, api_version, subscription_id, _opts \\ []) do
    %{}
    |> method(:post)
    |> url("/subscriptions/#{subscription_id}/resourceGroups/#{resource_group_name}/providers/Microsoft.Compute/virtualMachineScaleSets/#{vm_scale_set_name}/virtualmachines/#{instance_id}/poweroff")
    |> add_param(:query, :"api-version", api_version)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%Microsoft.Azure.Management.Compute.Model.OperationStatusResponse{})
  end

  @doc """
  Redeploys a virtual machine in a VM scale set.

  ## Parameters

  - connection (Microsoft.Azure.Management.Compute.Connection): Connection to server
  - resource_group_name (String.t): The name of the resource group.
  - vm_scale_set_name (String.t): The name of the VM scale set.
  - instance_id (String.t): The instance ID of the virtual machine.
  - api_version (String.t): Client Api Version.
  - subscription_id (String.t): Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  - opts (KeywordList): [optional] Optional parameters

  ## Returns

  {:ok, %Microsoft.Azure.Management.Compute.Model.OperationStatusResponse{}} on success
  {:error, info} on failure
  """
  @spec virtual_machine_scale_set_v_ms_redeploy(Tesla.Env.client, String.t, String.t, String.t, String.t, String.t, keyword()) :: {:ok, Microsoft.Azure.Management.Compute.Model.OperationStatusResponse.t} | {:error, Tesla.Env.t}
  def virtual_machine_scale_set_v_ms_redeploy(connection, resource_group_name, vm_scale_set_name, instance_id, api_version, subscription_id, _opts \\ []) do
    %{}
    |> method(:post)
    |> url("/subscriptions/#{subscription_id}/resourceGroups/#{resource_group_name}/providers/Microsoft.Compute/virtualMachineScaleSets/#{vm_scale_set_name}/virtualmachines/#{instance_id}/redeploy")
    |> add_param(:query, :"api-version", api_version)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%Microsoft.Azure.Management.Compute.Model.OperationStatusResponse{})
  end

  @doc """
  Reimages (upgrade the operating system) a specific virtual machine in a VM scale set.

  ## Parameters

  - connection (Microsoft.Azure.Management.Compute.Connection): Connection to server
  - resource_group_name (String.t): The name of the resource group.
  - vm_scale_set_name (String.t): The name of the VM scale set.
  - instance_id (String.t): The instance ID of the virtual machine.
  - api_version (String.t): Client Api Version.
  - subscription_id (String.t): Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  - opts (KeywordList): [optional] Optional parameters

  ## Returns

  {:ok, %Microsoft.Azure.Management.Compute.Model.OperationStatusResponse{}} on success
  {:error, info} on failure
  """
  @spec virtual_machine_scale_set_v_ms_reimage(Tesla.Env.client, String.t, String.t, String.t, String.t, String.t, keyword()) :: {:ok, Microsoft.Azure.Management.Compute.Model.OperationStatusResponse.t} | {:error, Tesla.Env.t}
  def virtual_machine_scale_set_v_ms_reimage(connection, resource_group_name, vm_scale_set_name, instance_id, api_version, subscription_id, _opts \\ []) do
    %{}
    |> method(:post)
    |> url("/subscriptions/#{subscription_id}/resourceGroups/#{resource_group_name}/providers/Microsoft.Compute/virtualMachineScaleSets/#{vm_scale_set_name}/virtualmachines/#{instance_id}/reimage")
    |> add_param(:query, :"api-version", api_version)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%Microsoft.Azure.Management.Compute.Model.OperationStatusResponse{})
  end

  @doc """
  Allows you to re-image all the disks ( including data disks ) in the a VM scale set instance. This operation is only supported for managed disks.

  ## Parameters

  - connection (Microsoft.Azure.Management.Compute.Connection): Connection to server
  - resource_group_name (String.t): The name of the resource group.
  - vm_scale_set_name (String.t): The name of the VM scale set.
  - instance_id (String.t): The instance ID of the virtual machine.
  - api_version (String.t): Client Api Version.
  - subscription_id (String.t): Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  - opts (KeywordList): [optional] Optional parameters

  ## Returns

  {:ok, %Microsoft.Azure.Management.Compute.Model.OperationStatusResponse{}} on success
  {:error, info} on failure
  """
  @spec virtual_machine_scale_set_v_ms_reimage_all(Tesla.Env.client, String.t, String.t, String.t, String.t, String.t, keyword()) :: {:ok, Microsoft.Azure.Management.Compute.Model.OperationStatusResponse.t} | {:error, Tesla.Env.t}
  def virtual_machine_scale_set_v_ms_reimage_all(connection, resource_group_name, vm_scale_set_name, instance_id, api_version, subscription_id, _opts \\ []) do
    %{}
    |> method(:post)
    |> url("/subscriptions/#{subscription_id}/resourceGroups/#{resource_group_name}/providers/Microsoft.Compute/virtualMachineScaleSets/#{vm_scale_set_name}/virtualmachines/#{instance_id}/reimageall")
    |> add_param(:query, :"api-version", api_version)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%Microsoft.Azure.Management.Compute.Model.OperationStatusResponse{})
  end

  @doc """
  Restarts a virtual machine in a VM scale set.

  ## Parameters

  - connection (Microsoft.Azure.Management.Compute.Connection): Connection to server
  - resource_group_name (String.t): The name of the resource group.
  - vm_scale_set_name (String.t): The name of the VM scale set.
  - instance_id (String.t): The instance ID of the virtual machine.
  - api_version (String.t): Client Api Version.
  - subscription_id (String.t): Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  - opts (KeywordList): [optional] Optional parameters

  ## Returns

  {:ok, %Microsoft.Azure.Management.Compute.Model.OperationStatusResponse{}} on success
  {:error, info} on failure
  """
  @spec virtual_machine_scale_set_v_ms_restart(Tesla.Env.client, String.t, String.t, String.t, String.t, String.t, keyword()) :: {:ok, Microsoft.Azure.Management.Compute.Model.OperationStatusResponse.t} | {:error, Tesla.Env.t}
  def virtual_machine_scale_set_v_ms_restart(connection, resource_group_name, vm_scale_set_name, instance_id, api_version, subscription_id, _opts \\ []) do
    %{}
    |> method(:post)
    |> url("/subscriptions/#{subscription_id}/resourceGroups/#{resource_group_name}/providers/Microsoft.Compute/virtualMachineScaleSets/#{vm_scale_set_name}/virtualmachines/#{instance_id}/restart")
    |> add_param(:query, :"api-version", api_version)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%Microsoft.Azure.Management.Compute.Model.OperationStatusResponse{})
  end

  @doc """
  Starts a virtual machine in a VM scale set.

  ## Parameters

  - connection (Microsoft.Azure.Management.Compute.Connection): Connection to server
  - resource_group_name (String.t): The name of the resource group.
  - vm_scale_set_name (String.t): The name of the VM scale set.
  - instance_id (String.t): The instance ID of the virtual machine.
  - api_version (String.t): Client Api Version.
  - subscription_id (String.t): Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  - opts (KeywordList): [optional] Optional parameters

  ## Returns

  {:ok, %Microsoft.Azure.Management.Compute.Model.OperationStatusResponse{}} on success
  {:error, info} on failure
  """
  @spec virtual_machine_scale_set_v_ms_start(Tesla.Env.client, String.t, String.t, String.t, String.t, String.t, keyword()) :: {:ok, Microsoft.Azure.Management.Compute.Model.OperationStatusResponse.t} | {:error, Tesla.Env.t}
  def virtual_machine_scale_set_v_ms_start(connection, resource_group_name, vm_scale_set_name, instance_id, api_version, subscription_id, _opts \\ []) do
    %{}
    |> method(:post)
    |> url("/subscriptions/#{subscription_id}/resourceGroups/#{resource_group_name}/providers/Microsoft.Compute/virtualMachineScaleSets/#{vm_scale_set_name}/virtualmachines/#{instance_id}/start")
    |> add_param(:query, :"api-version", api_version)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%Microsoft.Azure.Management.Compute.Model.OperationStatusResponse{})
  end

  @doc """
  Updates a virtual machine of a VM scale set.

  ## Parameters

  - connection (Microsoft.Azure.Management.Compute.Connection): Connection to server
  - resource_group_name (String.t): The name of the resource group.
  - vm_scale_set_name (String.t): The name of the VM scale set where the extension should be create or updated.
  - instance_id (String.t): The instance ID of the virtual machine.
  - parameters (VirtualMachineScaleSetVm): Parameters supplied to the Update Virtual Machine Scale Sets VM operation.
  - api_version (String.t): Client Api Version.
  - subscription_id (String.t): Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  - opts (KeywordList): [optional] Optional parameters

  ## Returns

  {:ok, %Microsoft.Azure.Management.Compute.Model.VirtualMachineScaleSetVm{}} on success
  {:error, info} on failure
  """
  @spec virtual_machine_scale_set_v_ms_update(Tesla.Env.client, String.t, String.t, String.t, Microsoft.Azure.Management.Compute.Model.VirtualMachineScaleSetVm.t, String.t, String.t, keyword()) :: {:ok, Microsoft.Azure.Management.Compute.Model.VirtualMachineScaleSetVm.t} | {:error, Tesla.Env.t}
  def virtual_machine_scale_set_v_ms_update(connection, resource_group_name, vm_scale_set_name, instance_id, parameters, api_version, subscription_id, _opts \\ []) do
    %{}
    |> method(:put)
    |> url("/subscriptions/#{subscription_id}/resourceGroups/#{resource_group_name}/providers/Microsoft.Compute/virtualMachineScaleSets/#{vm_scale_set_name}/virtualmachines/#{instance_id}")
    |> add_param(:body, :body, parameters)
    |> add_param(:query, :"api-version", api_version)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%Microsoft.Azure.Management.Compute.Model.VirtualMachineScaleSetVm{})
  end
end
