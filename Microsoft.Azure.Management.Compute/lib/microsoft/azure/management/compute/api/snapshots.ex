# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule Microsoft.Azure.Management.Compute.Api.Snapshots do
  @moduledoc """
  API calls for all endpoints tagged `Snapshots`.
  """

  alias Microsoft.Azure.Management.Compute.Connection
  import Microsoft.Azure.Management.Compute.RequestBuilder


  @doc """
  Creates or updates a snapshot.

  ## Parameters

  - connection (Microsoft.Azure.Management.Compute.Connection): Connection to server
  - subscription_id (String.t): Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  - resource_group_name (String.t): The name of the resource group.
  - snapshot_name (String.t): The name of the snapshot that is being created. The name can&#39;t be changed after the snapshot is created. Supported characters for the name are a-z, A-Z, 0-9 and _. The max name length is 80 characters.
  - api_version (String.t): Client Api Version.
  - snapshot (Snapshot): Snapshot object supplied in the body of the Put disk operation.
  - opts (KeywordList): [optional] Optional parameters

  ## Returns

  {:ok, %Microsoft.Azure.Management.Compute.Model.Snapshot{}} on success
  {:error, info} on failure
  """
  @spec snapshots_create_or_update(Tesla.Env.client, String.t, String.t, String.t, String.t, Microsoft.Azure.Management.Compute.Model.Snapshot.t, keyword()) :: {:ok, Microsoft.Azure.Management.Compute.Model.Snapshot.t} | {:error, Tesla.Env.t}
  def snapshots_create_or_update(connection, subscription_id, resource_group_name, snapshot_name, api_version, snapshot, _opts \\ []) do
    %{}
    |> method(:put)
    |> url("/subscriptions/#{subscription_id}/resourceGroups/#{resource_group_name}/providers/Microsoft.Compute/snapshots/#{snapshot_name}")
    |> add_param(:query, :"api-version", api_version)
    |> add_param(:body, :body, snapshot)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%Microsoft.Azure.Management.Compute.Model.Snapshot{})
  end

  @doc """
  Deletes a snapshot.

  ## Parameters

  - connection (Microsoft.Azure.Management.Compute.Connection): Connection to server
  - subscription_id (String.t): Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  - resource_group_name (String.t): The name of the resource group.
  - snapshot_name (String.t): The name of the snapshot that is being created. The name can&#39;t be changed after the snapshot is created. Supported characters for the name are a-z, A-Z, 0-9 and _. The max name length is 80 characters.
  - api_version (String.t): Client Api Version.
  - opts (KeywordList): [optional] Optional parameters

  ## Returns

  {:ok, %{}} on success
  {:error, info} on failure
  """
  @spec snapshots_delete(Tesla.Env.client, String.t, String.t, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def snapshots_delete(connection, subscription_id, resource_group_name, snapshot_name, api_version, _opts \\ []) do
    %{}
    |> method(:delete)
    |> url("/subscriptions/#{subscription_id}/resourceGroups/#{resource_group_name}/providers/Microsoft.Compute/snapshots/#{snapshot_name}")
    |> add_param(:query, :"api-version", api_version)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(false)
  end

  @doc """
  Gets information about a snapshot.

  ## Parameters

  - connection (Microsoft.Azure.Management.Compute.Connection): Connection to server
  - subscription_id (String.t): Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  - resource_group_name (String.t): The name of the resource group.
  - snapshot_name (String.t): The name of the snapshot that is being created. The name can&#39;t be changed after the snapshot is created. Supported characters for the name are a-z, A-Z, 0-9 and _. The max name length is 80 characters.
  - api_version (String.t): Client Api Version.
  - opts (KeywordList): [optional] Optional parameters

  ## Returns

  {:ok, %Microsoft.Azure.Management.Compute.Model.Snapshot{}} on success
  {:error, info} on failure
  """
  @spec snapshots_get(Tesla.Env.client, String.t, String.t, String.t, String.t, keyword()) :: {:ok, Microsoft.Azure.Management.Compute.Model.Snapshot.t} | {:error, Tesla.Env.t}
  def snapshots_get(connection, subscription_id, resource_group_name, snapshot_name, api_version, _opts \\ []) do
    %{}
    |> method(:get)
    |> url("/subscriptions/#{subscription_id}/resourceGroups/#{resource_group_name}/providers/Microsoft.Compute/snapshots/#{snapshot_name}")
    |> add_param(:query, :"api-version", api_version)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%Microsoft.Azure.Management.Compute.Model.Snapshot{})
  end

  @doc """
  Grants access to a snapshot.

  ## Parameters

  - connection (Microsoft.Azure.Management.Compute.Connection): Connection to server
  - subscription_id (String.t): Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  - resource_group_name (String.t): The name of the resource group.
  - snapshot_name (String.t): The name of the snapshot that is being created. The name can&#39;t be changed after the snapshot is created. Supported characters for the name are a-z, A-Z, 0-9 and _. The max name length is 80 characters.
  - api_version (String.t): Client Api Version.
  - grant_access_data (GrantAccessData): Access data object supplied in the body of the get snapshot access operation.
  - opts (KeywordList): [optional] Optional parameters

  ## Returns

  {:ok, %Microsoft.Azure.Management.Compute.Model.AccessUri{}} on success
  {:error, info} on failure
  """
  @spec snapshots_grant_access(Tesla.Env.client, String.t, String.t, String.t, String.t, Microsoft.Azure.Management.Compute.Model.GrantAccessData.t, keyword()) :: {:ok, Microsoft.Azure.Management.Compute.Model.AccessUri.t} | {:error, Tesla.Env.t}
  def snapshots_grant_access(connection, subscription_id, resource_group_name, snapshot_name, api_version, grant_access_data, _opts \\ []) do
    %{}
    |> method(:post)
    |> url("/subscriptions/#{subscription_id}/resourceGroups/#{resource_group_name}/providers/Microsoft.Compute/snapshots/#{snapshot_name}/beginGetAccess")
    |> add_param(:query, :"api-version", api_version)
    |> add_param(:body, :body, grant_access_data)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%Microsoft.Azure.Management.Compute.Model.AccessUri{})
  end

  @doc """
  Lists snapshots under a subscription.

  ## Parameters

  - connection (Microsoft.Azure.Management.Compute.Connection): Connection to server
  - subscription_id (String.t): Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  - api_version (String.t): Client Api Version.
  - opts (KeywordList): [optional] Optional parameters

  ## Returns

  {:ok, %Microsoft.Azure.Management.Compute.Model.SnapshotList{}} on success
  {:error, info} on failure
  """
  @spec snapshots_list(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, Microsoft.Azure.Management.Compute.Model.SnapshotList.t} | {:error, Tesla.Env.t}
  def snapshots_list(connection, subscription_id, api_version, _opts \\ []) do
    %{}
    |> method(:get)
    |> url("/subscriptions/#{subscription_id}/providers/Microsoft.Compute/snapshots")
    |> add_param(:query, :"api-version", api_version)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%Microsoft.Azure.Management.Compute.Model.SnapshotList{})
  end

  @doc """
  Lists snapshots under a resource group.

  ## Parameters

  - connection (Microsoft.Azure.Management.Compute.Connection): Connection to server
  - subscription_id (String.t): Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  - resource_group_name (String.t): The name of the resource group.
  - api_version (String.t): Client Api Version.
  - opts (KeywordList): [optional] Optional parameters

  ## Returns

  {:ok, %Microsoft.Azure.Management.Compute.Model.SnapshotList{}} on success
  {:error, info} on failure
  """
  @spec snapshots_list_by_resource_group(Tesla.Env.client, String.t, String.t, String.t, keyword()) :: {:ok, Microsoft.Azure.Management.Compute.Model.SnapshotList.t} | {:error, Tesla.Env.t}
  def snapshots_list_by_resource_group(connection, subscription_id, resource_group_name, api_version, _opts \\ []) do
    %{}
    |> method(:get)
    |> url("/subscriptions/#{subscription_id}/resourceGroups/#{resource_group_name}/providers/Microsoft.Compute/snapshots")
    |> add_param(:query, :"api-version", api_version)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%Microsoft.Azure.Management.Compute.Model.SnapshotList{})
  end

  @doc """
  Revokes access to a snapshot.

  ## Parameters

  - connection (Microsoft.Azure.Management.Compute.Connection): Connection to server
  - subscription_id (String.t): Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  - resource_group_name (String.t): The name of the resource group.
  - snapshot_name (String.t): The name of the snapshot that is being created. The name can&#39;t be changed after the snapshot is created. Supported characters for the name are a-z, A-Z, 0-9 and _. The max name length is 80 characters.
  - api_version (String.t): Client Api Version.
  - opts (KeywordList): [optional] Optional parameters

  ## Returns

  {:ok, %{}} on success
  {:error, info} on failure
  """
  @spec snapshots_revoke_access(Tesla.Env.client, String.t, String.t, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def snapshots_revoke_access(connection, subscription_id, resource_group_name, snapshot_name, api_version, _opts \\ []) do
    %{}
    |> method(:post)
    |> url("/subscriptions/#{subscription_id}/resourceGroups/#{resource_group_name}/providers/Microsoft.Compute/snapshots/#{snapshot_name}/endGetAccess")
    |> add_param(:query, :"api-version", api_version)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(false)
  end

  @doc """
  Updates (patches) a snapshot.

  ## Parameters

  - connection (Microsoft.Azure.Management.Compute.Connection): Connection to server
  - subscription_id (String.t): Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  - resource_group_name (String.t): The name of the resource group.
  - snapshot_name (String.t): The name of the snapshot that is being created. The name can&#39;t be changed after the snapshot is created. Supported characters for the name are a-z, A-Z, 0-9 and _. The max name length is 80 characters.
  - api_version (String.t): Client Api Version.
  - snapshot (SnapshotUpdate): Snapshot object supplied in the body of the Patch snapshot operation.
  - opts (KeywordList): [optional] Optional parameters

  ## Returns

  {:ok, %Microsoft.Azure.Management.Compute.Model.Snapshot{}} on success
  {:error, info} on failure
  """
  @spec snapshots_update(Tesla.Env.client, String.t, String.t, String.t, String.t, Microsoft.Azure.Management.Compute.Model.SnapshotUpdate.t, keyword()) :: {:ok, Microsoft.Azure.Management.Compute.Model.Snapshot.t} | {:error, Tesla.Env.t}
  def snapshots_update(connection, subscription_id, resource_group_name, snapshot_name, api_version, snapshot, _opts \\ []) do
    %{}
    |> method(:patch)
    |> url("/subscriptions/#{subscription_id}/resourceGroups/#{resource_group_name}/providers/Microsoft.Compute/snapshots/#{snapshot_name}")
    |> add_param(:query, :"api-version", api_version)
    |> add_param(:body, :body, snapshot)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%Microsoft.Azure.Management.Compute.Model.Snapshot{})
  end
end
