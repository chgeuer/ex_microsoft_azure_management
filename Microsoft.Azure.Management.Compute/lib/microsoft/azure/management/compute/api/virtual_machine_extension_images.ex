# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule Microsoft.Azure.Management.Compute.Api.VirtualMachineExtensionImages do
  @moduledoc """
  API calls for all endpoints tagged `VirtualMachineExtensionImages`.
  """

  alias Microsoft.Azure.Management.Compute.Connection
  import Microsoft.Azure.Management.Compute.RequestBuilder


  @doc """
  Gets a virtual machine extension image.

  ## Parameters

  - connection (Microsoft.Azure.Management.Compute.Connection): Connection to server
  - location (String.t): The name of a supported Azure region.
  - publisher_name (String.t): 
  - type (String.t): 
  - version (String.t): 
  - api_version (String.t): Client Api Version.
  - subscription_id (String.t): Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  - opts (KeywordList): [optional] Optional parameters

  ## Returns

  {:ok, %Microsoft.Azure.Management.Compute.Model.VirtualMachineExtensionImage{}} on success
  {:error, info} on failure
  """
  @spec virtual_machine_extension_images_get(Tesla.Env.client, String.t, String.t, String.t, String.t, String.t, String.t, keyword()) :: {:ok, Microsoft.Azure.Management.Compute.Model.VirtualMachineExtensionImage.t} | {:error, Tesla.Env.t}
  def virtual_machine_extension_images_get(connection, location, publisher_name, type, version, api_version, subscription_id, _opts \\ []) do
    %{}
    |> method(:get)
    |> url("/subscriptions/#{subscription_id}/providers/Microsoft.Compute/locations/#{location}/publishers/#{publisher_name}/artifacttypes/vmextension/types/#{type}/versions/#{version}")
    |> add_param(:query, :"api-version", api_version)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%Microsoft.Azure.Management.Compute.Model.VirtualMachineExtensionImage{})
  end

  @doc """
  Gets a list of virtual machine extension image types.

  ## Parameters

  - connection (Microsoft.Azure.Management.Compute.Connection): Connection to server
  - location (String.t): The name of a supported Azure region.
  - publisher_name (String.t): 
  - api_version (String.t): Client Api Version.
  - subscription_id (String.t): Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  - opts (KeywordList): [optional] Optional parameters

  ## Returns

  {:ok, [%VirtualMachineExtensionImage{}, ...]} on success
  {:error, info} on failure
  """
  @spec virtual_machine_extension_images_list_types(Tesla.Env.client, String.t, String.t, String.t, String.t, keyword()) :: {:ok, list(Microsoft.Azure.Management.Compute.Model.VirtualMachineExtensionImage.t)} | {:error, Tesla.Env.t}
  def virtual_machine_extension_images_list_types(connection, location, publisher_name, api_version, subscription_id, _opts \\ []) do
    %{}
    |> method(:get)
    |> url("/subscriptions/#{subscription_id}/providers/Microsoft.Compute/locations/#{location}/publishers/#{publisher_name}/artifacttypes/vmextension/types")
    |> add_param(:query, :"api-version", api_version)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode([%Microsoft.Azure.Management.Compute.Model.VirtualMachineExtensionImage{}])
  end

  @doc """
  Gets a list of virtual machine extension image versions.

  ## Parameters

  - connection (Microsoft.Azure.Management.Compute.Connection): Connection to server
  - location (String.t): The name of a supported Azure region.
  - publisher_name (String.t): 
  - type (String.t): 
  - api_version (String.t): Client Api Version.
  - subscription_id (String.t): Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  - opts (KeywordList): [optional] Optional parameters
    - :__filter (String.t): The filter to apply on the operation.
    - :__top (integer()): 
    - :__orderby (String.t): 

  ## Returns

  {:ok, [%VirtualMachineExtensionImage{}, ...]} on success
  {:error, info} on failure
  """
  @spec virtual_machine_extension_images_list_versions(Tesla.Env.client, String.t, String.t, String.t, String.t, String.t, keyword()) :: {:ok, list(Microsoft.Azure.Management.Compute.Model.VirtualMachineExtensionImage.t)} | {:error, Tesla.Env.t}
  def virtual_machine_extension_images_list_versions(connection, location, publisher_name, type, api_version, subscription_id, opts \\ []) do
    optional_params = %{
      :"$filter" => :query,
      :"$top" => :query,
      :"$orderby" => :query
    }
    %{}
    |> method(:get)
    |> url("/subscriptions/#{subscription_id}/providers/Microsoft.Compute/locations/#{location}/publishers/#{publisher_name}/artifacttypes/vmextension/types/#{type}/versions")
    |> add_param(:query, :"api-version", api_version)
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode([%Microsoft.Azure.Management.Compute.Model.VirtualMachineExtensionImage{}])
  end
end
