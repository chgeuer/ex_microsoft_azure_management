# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule Microsoft.Azure.Management.Advisor.Api.Configurations do
  @moduledoc """
  API calls for all endpoints tagged `Configurations`.
  """

  alias Microsoft.Azure.Management.Advisor.Connection
  import Microsoft.Azure.Management.Advisor.RequestBuilder


  @doc """
  Create/Overwrite Azure Advisor configuration.

  ## Parameters

  - connection (Microsoft.Azure.Management.Advisor.Connection): Connection to server
  - api_version (String.t): The version of the API to be used with the client request.
  - config_contract (ConfigData): The Azure Advisor configuration data structure.
  - subscription_id (String.t): The Azure subscription ID.
  - resource_group (String.t): The name of the Azure resource group.
  - opts (KeywordList): [optional] Optional parameters

  ## Returns

  {:ok, %{}} on success
  {:error, info} on failure
  """
  @spec configurations_create_in_resource_group(Tesla.Env.client, String.t, Microsoft.Azure.Management.Advisor.Model.ConfigData.t, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def configurations_create_in_resource_group(connection, api_version, config_contract, subscription_id, resource_group, _opts \\ []) do
    %{}
    |> method(:put)
    |> url("/subscriptions/#{subscription_id}/resourceGroups/#{resource_group}/providers/Microsoft.Advisor/configurations")
    |> add_param(:query, :"api-version", api_version)
    |> add_param(:body, :body, config_contract)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(false)
  end

  @doc """
  Create/Overwrite Azure Advisor configuration.
  Create/Overwrite Azure Advisor configuration and also delete all configurations of contained resource groups.

  ## Parameters

  - connection (Microsoft.Azure.Management.Advisor.Connection): Connection to server
  - api_version (String.t): The version of the API to be used with the client request.
  - config_contract (ConfigData): The Azure Advisor configuration data structure.
  - subscription_id (String.t): The Azure subscription ID.
  - opts (KeywordList): [optional] Optional parameters

  ## Returns

  {:ok, %{}} on success
  {:error, info} on failure
  """
  @spec configurations_create_in_subscription(Tesla.Env.client, String.t, Microsoft.Azure.Management.Advisor.Model.ConfigData.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def configurations_create_in_subscription(connection, api_version, config_contract, subscription_id, _opts \\ []) do
    %{}
    |> method(:put)
    |> url("/subscriptions/#{subscription_id}/providers/Microsoft.Advisor/configurations")
    |> add_param(:query, :"api-version", api_version)
    |> add_param(:body, :body, config_contract)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(false)
  end

  @doc """
  Retrieve Azure Advisor configurations.

  ## Parameters

  - connection (Microsoft.Azure.Management.Advisor.Connection): Connection to server
  - api_version (String.t): The version of the API to be used with the client request.
  - subscription_id (String.t): The Azure subscription ID.
  - resource_group (String.t): The name of the Azure resource group.
  - opts (KeywordList): [optional] Optional parameters

  ## Returns

  {:ok, %Microsoft.Azure.Management.Advisor.Model.ConfigurationListResult{}} on success
  {:error, info} on failure
  """
  @spec configurations_list_by_resource_group(Tesla.Env.client, String.t, String.t, String.t, keyword()) :: {:ok, Microsoft.Azure.Management.Advisor.Model.ConfigurationListResult.t} | {:error, Tesla.Env.t}
  def configurations_list_by_resource_group(connection, api_version, subscription_id, resource_group, _opts \\ []) do
    %{}
    |> method(:get)
    |> url("/subscriptions/#{subscription_id}/resourceGroups/#{resource_group}/providers/Microsoft.Advisor/configurations")
    |> add_param(:query, :"api-version", api_version)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%Microsoft.Azure.Management.Advisor.Model.ConfigurationListResult{})
  end

  @doc """
  Retrieve Azure Advisor configurations.
  Retrieve Azure Advisor configurations and also retrieve configurations of contained resource groups.

  ## Parameters

  - connection (Microsoft.Azure.Management.Advisor.Connection): Connection to server
  - api_version (String.t): The version of the API to be used with the client request.
  - subscription_id (String.t): The Azure subscription ID.
  - opts (KeywordList): [optional] Optional parameters

  ## Returns

  {:ok, %Microsoft.Azure.Management.Advisor.Model.ConfigurationListResult{}} on success
  {:error, info} on failure
  """
  @spec configurations_list_by_subscription(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, Microsoft.Azure.Management.Advisor.Model.ConfigurationListResult.t} | {:error, Tesla.Env.t}
  def configurations_list_by_subscription(connection, api_version, subscription_id, _opts \\ []) do
    %{}
    |> method(:get)
    |> url("/subscriptions/#{subscription_id}/providers/Microsoft.Advisor/configurations")
    |> add_param(:query, :"api-version", api_version)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%Microsoft.Azure.Management.Advisor.Model.ConfigurationListResult{})
  end
end
