# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule Microsoft.Azure.Management.Advisor.Api.Suppressions do
  @moduledoc """
  API calls for all endpoints tagged `Suppressions`.
  """

  alias Microsoft.Azure.Management.Advisor.Connection
  import Microsoft.Azure.Management.Advisor.RequestBuilder


  @doc """
  Enables the snoozed or dismissed attribute of a recommendation. The snoozed or dismissed attribute is referred to as a suppression. Use this API to create or update the snoozed or dismissed status of a recommendation.

  ## Parameters

  - connection (Microsoft.Azure.Management.Advisor.Connection): Connection to server
  - resource_uri (String.t): The fully qualified Azure Resource Manager identifier of the resource to which the recommendation applies.
  - recommendation_id (String.t): The recommendation ID.
  - name (String.t): The name of the suppression.
  - suppression_contract (SuppressionContract): The snoozed or dismissed attribute; for example, the snooze duration.
  - api_version (String.t): The version of the API to be used with the client request.
  - opts (KeywordList): [optional] Optional parameters

  ## Returns

  {:ok, %Microsoft.Azure.Management.Advisor.Model.SuppressionContract{}} on success
  {:error, info} on failure
  """
  @spec suppressions_create(Tesla.Env.client, String.t, String.t, String.t, Microsoft.Azure.Management.Advisor.Model.SuppressionContract.t, String.t, keyword()) :: {:ok, Microsoft.Azure.Management.Advisor.Model.SuppressionContract.t} | {:error, Tesla.Env.t}
  def suppressions_create(connection, resource_uri, recommendation_id, name, suppression_contract, api_version, _opts \\ []) do
    %{}
    |> method(:put)
    |> url("/#{resource_uri}/providers/Microsoft.Advisor/recommendations/#{recommendation_id}/suppressions/#{name}")
    |> add_param(:body, :body, suppression_contract)
    |> add_param(:query, :"api-version", api_version)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%Microsoft.Azure.Management.Advisor.Model.SuppressionContract{})
  end

  @doc """
  Enables the activation of a snoozed or dismissed recommendation. The snoozed or dismissed attribute of a recommendation is referred to as a suppression.

  ## Parameters

  - connection (Microsoft.Azure.Management.Advisor.Connection): Connection to server
  - resource_uri (String.t): The fully qualified Azure Resource Manager identifier of the resource to which the recommendation applies.
  - recommendation_id (String.t): The recommendation ID.
  - name (String.t): The name of the suppression.
  - api_version (String.t): The version of the API to be used with the client request.
  - opts (KeywordList): [optional] Optional parameters

  ## Returns

  {:ok, %{}} on success
  {:error, info} on failure
  """
  @spec suppressions_delete(Tesla.Env.client, String.t, String.t, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def suppressions_delete(connection, resource_uri, recommendation_id, name, api_version, _opts \\ []) do
    %{}
    |> method(:delete)
    |> url("/#{resource_uri}/providers/Microsoft.Advisor/recommendations/#{recommendation_id}/suppressions/#{name}")
    |> add_param(:query, :"api-version", api_version)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(false)
  end

  @doc """
  Obtains the details of a suppression.

  ## Parameters

  - connection (Microsoft.Azure.Management.Advisor.Connection): Connection to server
  - resource_uri (String.t): The fully qualified Azure Resource Manager identifier of the resource to which the recommendation applies.
  - recommendation_id (String.t): The recommendation ID.
  - name (String.t): The name of the suppression.
  - api_version (String.t): The version of the API to be used with the client request.
  - opts (KeywordList): [optional] Optional parameters

  ## Returns

  {:ok, %Microsoft.Azure.Management.Advisor.Model.SuppressionContract{}} on success
  {:error, info} on failure
  """
  @spec suppressions_get(Tesla.Env.client, String.t, String.t, String.t, String.t, keyword()) :: {:ok, Microsoft.Azure.Management.Advisor.Model.SuppressionContract.t} | {:error, Tesla.Env.t}
  def suppressions_get(connection, resource_uri, recommendation_id, name, api_version, _opts \\ []) do
    %{}
    |> method(:get)
    |> url("/#{resource_uri}/providers/Microsoft.Advisor/recommendations/#{recommendation_id}/suppressions/#{name}")
    |> add_param(:query, :"api-version", api_version)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%Microsoft.Azure.Management.Advisor.Model.SuppressionContract{})
  end

  @doc """
  Retrieves the list of snoozed or dismissed suppressions for a subscription. The snoozed or dismissed attribute of a recommendation is referred to as a suppression.

  ## Parameters

  - connection (Microsoft.Azure.Management.Advisor.Connection): Connection to server
  - subscription_id (String.t): The Azure subscription ID.
  - api_version (String.t): The version of the API to be used with the client request.
  - opts (KeywordList): [optional] Optional parameters
    - :__top (integer()): The number of suppressions per page if a paged version of this API is being used.
    - :__skip_token (String.t): The page-continuation token to use with a paged version of this API.

  ## Returns

  {:ok, %Microsoft.Azure.Management.Advisor.Model.SuppressionContractListResult{}} on success
  {:error, info} on failure
  """
  @spec suppressions_list(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, Microsoft.Azure.Management.Advisor.Model.SuppressionContractListResult.t} | {:error, Tesla.Env.t}
  def suppressions_list(connection, subscription_id, api_version, opts \\ []) do
    optional_params = %{
      :"$top" => :query,
      :"$skipToken" => :query
    }
    %{}
    |> method(:get)
    |> url("/subscriptions/#{subscription_id}/providers/Microsoft.Advisor/suppressions")
    |> add_param(:query, :"api-version", api_version)
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%Microsoft.Azure.Management.Advisor.Model.SuppressionContractListResult{})
  end
end
