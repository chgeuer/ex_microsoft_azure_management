defmodule D do
def q() do
{:ok, {:defmodule, [line: 5], [{:__aliases__, [line: 5], [:Microsoft, :Azure, :Management, :Advisor, :RequestBuilder]}, [do: {:__block__, [], [{:@, [line: 6], [{:moduledoc, [line: 6], ["Helper functions for building Tesla requests\n"]}]}, {:@, [line: 10], [{:doc, [line: 10], ["Specify the request method when building a request\n\n## Parameters\n\n- request (Map) - Collected request options\n- m (atom) - Request method\n\n## Returns\n\nMap\n"]}]}, {:@, [line: 22], [{:spec, [line: 22], [{:::, [line: 22], [{:method, [line: 22], [{:map, [line: 22], []}, {:atom, [line: 22], nil}]}, {:map, [line: 22], []}]}]}]}, {:def, [line: 23], [{:method, [line: 23], [{:request, [line: 23], nil}, {:m, [line: 23], nil}]}, [do: {{:., [line: 24], [{:__aliases__, [line: 24], [:Map]}, :put_new]}, [line: 24], [{:request, [line: 24], nil}, :method, {:m, [line: 24], nil}]}]]}, {:@, [line: 27], [{:doc, [line: 27], ["Specify the request method when building a request\n\n## Parameters\n\n- request (Map) - Collected request options\n- u (String) - Request URL\n\n## Returns\n\nMap\n"]}]}, {:@, [line: 39], [{:spec, [line: 39], [{:::, [line: 39], [{:url, [line: 39], [{:map, [line: 39], []}, {{:., [line: 39], [{:__aliases__, [line: 39], [:String]}, :t]}, [line: 39], []}]}, {:map, [line: 39], []}]}]}]}, {:def, [line: 40], [{:url, [line: 40], [{:request, [line: 40], nil}, {:u, [line: 40], nil}]}, [do: {{:., [line: 41], [{:__aliases__, [line: 41], [:Map]}, :put_new]}, [line: 41], [{:request, [line: 41], nil}, :url, {:u, [line: 41], nil}]}]]}, {:@, [line: 44], [{:doc, [line: 44], ["Add optional parameters to the request\n\n## Parameters\n\n- request (Map) - Collected request options\n- definitions (Map) - Map of parameter name to parameter location.\n- options (KeywordList) - The provided optional parameters\n\n## Returns\n\nMap\n"]}]}, {:@, [line: 57], [{:spec, [line: 57], [{:::, [line: 57], [{:add_optional_params, [line: 57], [{:map, [line: 57], []}, {:%{}, [line: 57], [{{:optional, [line: 57], [{:atom, [line: 57], nil}]}, {:atom, [line: 57], nil}}]}, {:keyword, [line: 57], []}]}, {:map, [line: 57], []}]}]}]}, {:def, [line: 58], [{:add_optional_params, [line: 58], [{:request, [line: 58], nil}, {:_, [line: 58], nil}, []]}, [do: {:request, [line: 58], nil}]]}, {:def, [line: 59], [{:add_optional_params, [line: 59], [{:request, [line: 59], nil}, {:definitions, [line: 59], nil}, [{:|, [line: 59], [{{:key, [line: 59], nil}, {:value, [line: 59], nil}}, {:tail, [line: 59], nil}]}]]}, [do: {:case, [line: 60], [{:definitions, [line: 60], nil}, [do: [{:->, [line: 61], [[{:%{}, [line: 61], [{{:^, [line: 61], [{:key, ...}]}, {:location, [line: 61], nil}}]}], {:|>, [line: 64], [{:|>, [line: 63], [{:request, [...], ...}, {:add_param, ...}]}, {:add_optional_params, [line: 64], [{:definitions, ...}, {...}]}]}]}, {:->, [line: 65], [[{:_, [line: 65], nil}], {:add_optional_params, [line: 66], [{:request, [line: 66], nil}, {:definitions, [line: 66], nil}, {:tail, [line: 66], nil}]}]}]]]}]]}, {:@, [line: 70], [{:doc, [line: 70], ["Add optional parameters to the request\n\n## Parameters\n\n- request (Map) - Collected request options\n- location (atom) - Where to put the parameter\n- key (atom) - The name of the parameter\n- value (any) - The value of the parameter\n\n## Returns\n\nMap\n"]}]}, {:@, [line: 84], [{:spec, [line: 84], [{:::, [line: 84], [{:add_param, [line: 84], [{:map, [line: 84], []}, {:atom, [line: 84], nil}, {:atom, [line: 84], nil}, {:any, [line: 84], []}]}, {:map, [line: 84], []}]}]}]}, {:def, [line: 85], [{:add_param, [line: 85], [{:request, [line: 85], nil}, :body, :body, {:value, [line: 85], nil}]}, [do: {{:., [line: 85], [{:__aliases__, [line: 85], [:Map]}, :put]}, [line: 85], [{:request, [line: 85], nil}, :body, {:value, [line: 85], nil}]}]]}, {:def, [line: 86], [{:add_param, [line: 86], [{:request, [line: 86], nil}, :body, {:key, [line: 86], nil}, {:value, [line: 86], nil}]}, [do: {:|>, [line: 89], [{:|>, [line: 88], [{:request, [line: 87], nil}, {{:., [line: 88], [{:__aliases__, [line: 88], [:Map]}, :put_new_lazy]}, [line: 88], [:body, {:&, [line: 88], [{...}]}]}]}, {{:., [line: 89], [{:__aliases__, [line: 89], [:Map]}, :update!]}, [line: 89], [:body, {:&, [line: 89], [{{:., [line: 89], [...]}, [line: 89], [{...}, ...]}]}]}]}]]}, {:def, [line: 91], [{:add_param, [line: 91], [{:request, [line: 91], nil}, :file, {:name, [line: 91], nil}, {:path, [line: 91], nil}]}, [do: {:|>, [line: 94], [{:|>, [line: 93], [{:request, [line: 92], nil}, {{:., [line: 93], [{:__aliases__, [line: 93], [...]}, :put_new_lazy]}, [line: 93], [:body, {:&, [line: 93], [...]}]}]}, {{:., [line: 94], [{:__aliases__, [line: 94], [:Map]}, :update!]}, [line: 94], [:body, {:&, [line: 94], [{{:., [...], ...}, [line: 94], [...]}]}]}]}]]}, {:def, [line: 96], [{:add_param, [line: 96], [{:request, [line: 96], nil}, :form, {:name, [line: 96], nil}, {:value, [line: 96], nil}]}, [do: {:|>, [line: 98], [{:request, [line: 97], nil}, {{:., [line: 98], [{:__aliases__, [line: 98], [:Map]}, :update]}, [line: 98], [:body, {:%{}, [line: 98], [{{:name, ...}, {...}}]}, {:&, [line: 98], [{{...}, ...}]}]}]}]]}, {:def, [line: 100], [{:add_param, [line: 100], [{:request, [line: 100], nil}, {:location, [line: 100], nil}, {:key, [line: 100], nil}, {:value, [line: 100], nil}]}, [do: {{:., [line: 101], [{:__aliases__, [line: 101], [:Map]}, :update]}, [line: 101], [{:request, [line: 101], nil}, {:location, [line: 101], nil}, [{{:key, [line: 101], nil}, {:value, [line: 101], nil}}], {:&, [line: 101], [{:++, [line: 101], [{...}, ...]}]}]}]]}, {:@, [line: 104], [{:doc, [line: 104], ["Handle the response for a Tesla request\n\n## Parameters\n\n- arg1 (Tesla.Env.t | term) - The response object\n- arg2 (:false | struct | [struct]) - The shape of the struct to deserialize into\n\n## Returns\n\n{:ok, struct} on success\n{:error, term} on failure\n"]}]}, {:@, [line: 117], [{:spec, [line: 117], [{:::, [line: 117], [{:decode, [line: 117], [{:|, [line: 117], [...]}]}, {:|, [line: 117], [{:ok, {...}}, {:|, ...}]}]}]}]}, {:def, [line: 118], [{:decode, [line: 118], [{:%, [line: 118], [{:__aliases__, [line: 118], [:Tesla, :Env]}, {:%{}, [line: 118], [status: 200, body: {...}]}]}]}, [do: {{:., [line: 118], [{:__aliases__, [line: 118], [:Poison]}, :decode]}, [line: 118], [{:body, [line: 118], nil}]}]]}, {:def, [line: 119], [{:decode, [line: 119], [{:response, [line: 119], nil}]}, [do: {:error, {:response, [line: 119], nil}}]]}, {:@, [line: 121], [{:spec, [line: 121], [{:::, [line: 121], [{:decode, [line: 121], [{...}, ...]}, {:|, [line: 121], [...]}]}]}]}, {:def, [line: 122], [{:decode, [line: 122], [{:=, [line: 122], [{:%, [line: 122], [...]}, {:env, [...], ...}]}, false]}, [do: {:ok, {:env, [line: 122], nil}}]]}, {:def, [line: 123], [{:decode, [line: 123], [{:%, [line: 123], [{:__aliases__, [...], ...}, {:%{}, ...}]}, {:struct, [line: 123], nil}]}, [do: {{:., [line: 123], [{:__aliases__, [line: 123], [...]}, :decode]}, [line: 123], [{:body, [line: 123], nil}, [as: {:struct, [...], ...}]]}]]}, {:def, [line: 124], [{:decode, [line: 124], [{:response, [line: 124], nil}, {:_struct, [line: 124], nil}]}, [do: {:error, {:response, [line: 124], nil}}]]}]}]]}}
end
end