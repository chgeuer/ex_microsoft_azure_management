# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule Microsoft.Azure.Management.Preview.BotService.Api.Channel do
  @moduledoc """
  API calls for all endpoints tagged `Channel`.
  """

  alias Microsoft.Azure.Management.Preview.BotService.Connection
  import Microsoft.Azure.Management.Preview.BotService.RequestBuilder


  @doc """
  Creates a Channel registration for a Bot Service

  ## Parameters

  - connection (Microsoft.Azure.Management.Preview.BotService.Connection): Connection to server
  - resource_group_name (String.t): The name of the Bot resource group in the user subscription.
  - resource_name (String.t): The name of the Bot resource.
  - channel_name (String.t): The name of the Channel resource.
  - parameters (BotChannel): The parameters to provide for the created bot.
  - api_version (String.t): Version of the API to be used with the client request. Current version is 2017-12-01
  - subscription_id (String.t): Azure Subscription ID.
  - opts (KeywordList): [optional] Optional parameters

  ## Returns

  {:ok, %Microsoft.Azure.Management.Preview.BotService.Model.BotChannel{}} on success
  {:error, info} on failure
  """
  @spec channels_create(Tesla.Env.client, String.t, String.t, String.t, Microsoft.Azure.Management.Preview.BotService.Model.BotChannel.t, String.t, String.t, keyword()) :: {:ok, Microsoft.Azure.Management.Preview.BotService.Model.BotChannel.t} | {:error, Tesla.Env.t}
  def channels_create(connection, resource_group_name, resource_name, channel_name, parameters, api_version, subscription_id, _opts \\ []) do
    %{}
    |> method(:put)
    |> url("/subscriptions/#{subscription_id}/resourceGroups/#{resource_group_name}/providers/Microsoft.BotService/botServices/#{resource_name}/channels/#{channel_name}")
    |> add_param(:body, :body, parameters)
    |> add_param(:query, :"api-version", api_version)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%Microsoft.Azure.Management.Preview.BotService.Model.BotChannel{})
  end

  @doc """
  Deletes a Channel registration from a Bot Service

  ## Parameters

  - connection (Microsoft.Azure.Management.Preview.BotService.Connection): Connection to server
  - resource_group_name (String.t): The name of the Bot resource group in the user subscription.
  - resource_name (String.t): The name of the Bot resource.
  - channel_name (String.t): The name of the Bot resource.
  - api_version (String.t): Version of the API to be used with the client request. Current version is 2017-12-01
  - subscription_id (String.t): Azure Subscription ID.
  - opts (KeywordList): [optional] Optional parameters

  ## Returns

  {:ok, %{}} on success
  {:error, info} on failure
  """
  @spec channels_delete(Tesla.Env.client, String.t, String.t, String.t, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def channels_delete(connection, resource_group_name, resource_name, channel_name, api_version, subscription_id, _opts \\ []) do
    %{}
    |> method(:delete)
    |> url("/subscriptions/#{subscription_id}/resourceGroups/#{resource_group_name}/providers/Microsoft.BotService/botServices/#{resource_name}/channels/#{channel_name}")
    |> add_param(:query, :"api-version", api_version)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(false)
  end

  @doc """
  Returns a BotService Channel registration specified by the parameters.

  ## Parameters

  - connection (Microsoft.Azure.Management.Preview.BotService.Connection): Connection to server
  - resource_group_name (String.t): The name of the Bot resource group in the user subscription.
  - resource_name (String.t): The name of the Bot resource.
  - channel_name (String.t): The name of the Bot resource.
  - api_version (String.t): Version of the API to be used with the client request. Current version is 2017-12-01
  - subscription_id (String.t): Azure Subscription ID.
  - opts (KeywordList): [optional] Optional parameters

  ## Returns

  {:ok, %Microsoft.Azure.Management.Preview.BotService.Model.BotChannel{}} on success
  {:error, info} on failure
  """
  @spec channels_get(Tesla.Env.client, String.t, String.t, String.t, String.t, String.t, keyword()) :: {:ok, Microsoft.Azure.Management.Preview.BotService.Model.BotChannel.t} | {:error, Tesla.Env.t}
  def channels_get(connection, resource_group_name, resource_name, channel_name, api_version, subscription_id, _opts \\ []) do
    %{}
    |> method(:get)
    |> url("/subscriptions/#{subscription_id}/resourceGroups/#{resource_group_name}/providers/Microsoft.BotService/botServices/#{resource_name}/channels/#{channel_name}")
    |> add_param(:query, :"api-version", api_version)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%Microsoft.Azure.Management.Preview.BotService.Model.BotChannel{})
  end

  @doc """
  Returns all the Channel registrations of a particular BotService resource

  ## Parameters

  - connection (Microsoft.Azure.Management.Preview.BotService.Connection): Connection to server
  - resource_group_name (String.t): The name of the Bot resource group in the user subscription.
  - resource_name (String.t): The name of the Bot resource.
  - subscription_id (String.t): Azure Subscription ID.
  - api_version (String.t): Version of the API to be used with the client request. Current version is 2017-12-01
  - opts (KeywordList): [optional] Optional parameters

  ## Returns

  {:ok, %Microsoft.Azure.Management.Preview.BotService.Model.ChannelResponseList{}} on success
  {:error, info} on failure
  """
  @spec channels_list_by_resource_group(Tesla.Env.client, String.t, String.t, String.t, String.t, keyword()) :: {:ok, Microsoft.Azure.Management.Preview.BotService.Model.ChannelResponseList.t} | {:error, Tesla.Env.t}
  def channels_list_by_resource_group(connection, resource_group_name, resource_name, subscription_id, api_version, _opts \\ []) do
    %{}
    |> method(:get)
    |> url("/subscriptions/#{subscription_id}/resourceGroups/#{resource_group_name}/providers/Microsoft.BotService/botServices/#{resource_name}/channels")
    |> add_param(:query, :"api-version", api_version)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%Microsoft.Azure.Management.Preview.BotService.Model.ChannelResponseList{})
  end

  @doc """
  Lists a Channel registration for a Bot Service including secrets

  ## Parameters

  - connection (Microsoft.Azure.Management.Preview.BotService.Connection): Connection to server
  - resource_group_name (String.t): The name of the Bot resource group in the user subscription.
  - resource_name (String.t): The name of the Bot resource.
  - channel_name (String.t): The name of the Channel resource.
  - api_version (String.t): Version of the API to be used with the client request. Current version is 2017-12-01
  - subscription_id (String.t): Azure Subscription ID.
  - opts (KeywordList): [optional] Optional parameters

  ## Returns

  {:ok, %Microsoft.Azure.Management.Preview.BotService.Model.BotChannel{}} on success
  {:error, info} on failure
  """
  @spec channels_list_with_keys(Tesla.Env.client, String.t, String.t, String.t, String.t, String.t, keyword()) :: {:ok, Microsoft.Azure.Management.Preview.BotService.Model.BotChannel.t} | {:error, Tesla.Env.t}
  def channels_list_with_keys(connection, resource_group_name, resource_name, channel_name, api_version, subscription_id, _opts \\ []) do
    %{}
    |> method(:post)
    |> url("/subscriptions/#{subscription_id}/resourceGroups/#{resource_group_name}/providers/Microsoft.BotService/botServices/#{resource_name}/channels/#{channel_name}/listChannelWithKeys")
    |> add_param(:query, :"api-version", api_version)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%Microsoft.Azure.Management.Preview.BotService.Model.BotChannel{})
  end

  @doc """
  Updates a Channel registration for a Bot Service

  ## Parameters

  - connection (Microsoft.Azure.Management.Preview.BotService.Connection): Connection to server
  - resource_group_name (String.t): The name of the Bot resource group in the user subscription.
  - resource_name (String.t): The name of the Bot resource.
  - channel_name (String.t): The name of the Channel resource.
  - parameters (BotChannel): The parameters to provide for the created bot.
  - api_version (String.t): Version of the API to be used with the client request. Current version is 2017-12-01
  - subscription_id (String.t): Azure Subscription ID.
  - opts (KeywordList): [optional] Optional parameters

  ## Returns

  {:ok, %Microsoft.Azure.Management.Preview.BotService.Model.BotChannel{}} on success
  {:error, info} on failure
  """
  @spec channels_update(Tesla.Env.client, String.t, String.t, String.t, Microsoft.Azure.Management.Preview.BotService.Model.BotChannel.t, String.t, String.t, keyword()) :: {:ok, Microsoft.Azure.Management.Preview.BotService.Model.BotChannel.t} | {:error, Tesla.Env.t}
  def channels_update(connection, resource_group_name, resource_name, channel_name, parameters, api_version, subscription_id, _opts \\ []) do
    %{}
    |> method(:patch)
    |> url("/subscriptions/#{subscription_id}/resourceGroups/#{resource_group_name}/providers/Microsoft.BotService/botServices/#{resource_name}/channels/#{channel_name}")
    |> add_param(:body, :body, parameters)
    |> add_param(:query, :"api-version", api_version)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%Microsoft.Azure.Management.Preview.BotService.Model.BotChannel{})
  end
end
