# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule Microsoft.Azure.Management.Preview.Containers.Api.Builds do
  @moduledoc """
  API calls for all endpoints tagged `Builds`.
  """

  alias Microsoft.Azure.Management.Preview.Containers.Connection
  import Microsoft.Azure.Management.Preview.Containers.RequestBuilder


  @doc """
  Cancel an existing build.

  ## Parameters

  - connection (Microsoft.Azure.Management.Preview.Containers.Connection): Connection to server
  - subscription_id (String.t): The Microsoft Azure subscription ID.
  - resource_group_name (String.t): The name of the resource group to which the container registry belongs.
  - registry_name (String.t): The name of the container registry.
  - api_version (String.t): The client API version.
  - build_id (String.t): The build ID.
  - opts (KeywordList): [optional] Optional parameters

  ## Returns

  {:ok, %{}} on success
  {:error, info} on failure
  """
  @spec builds_cancel(Tesla.Env.client, String.t, String.t, String.t, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def builds_cancel(connection, subscription_id, resource_group_name, registry_name, api_version, build_id, _opts \\ []) do
    %{}
    |> method(:post)
    |> url("/subscriptions/#{subscription_id}/resourceGroups/#{resource_group_name}/providers/Microsoft.ContainerRegistry/registries/#{registry_name}/builds/#{build_id}/cancel")
    |> add_param(:query, :"api-version", api_version)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(false)
  end

  @doc """
  Gets the detailed information for a given build.

  ## Parameters

  - connection (Microsoft.Azure.Management.Preview.Containers.Connection): Connection to server
  - subscription_id (String.t): The Microsoft Azure subscription ID.
  - resource_group_name (String.t): The name of the resource group to which the container registry belongs.
  - registry_name (String.t): The name of the container registry.
  - api_version (String.t): The client API version.
  - build_id (String.t): The build ID.
  - opts (KeywordList): [optional] Optional parameters

  ## Returns

  {:ok, %Microsoft.Azure.Management.Preview.Containers.Model.Build{}} on success
  {:error, info} on failure
  """
  @spec builds_get(Tesla.Env.client, String.t, String.t, String.t, String.t, String.t, keyword()) :: {:ok, Microsoft.Azure.Management.Preview.Containers.Model.Build.t} | {:error, Tesla.Env.t}
  def builds_get(connection, subscription_id, resource_group_name, registry_name, api_version, build_id, _opts \\ []) do
    %{}
    |> method(:get)
    |> url("/subscriptions/#{subscription_id}/resourceGroups/#{resource_group_name}/providers/Microsoft.ContainerRegistry/registries/#{registry_name}/builds/#{build_id}")
    |> add_param(:query, :"api-version", api_version)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%Microsoft.Azure.Management.Preview.Containers.Model.Build{})
  end

  @doc """
  Gets a link to download the build logs.

  ## Parameters

  - connection (Microsoft.Azure.Management.Preview.Containers.Connection): Connection to server
  - subscription_id (String.t): The Microsoft Azure subscription ID.
  - resource_group_name (String.t): The name of the resource group to which the container registry belongs.
  - registry_name (String.t): The name of the container registry.
  - api_version (String.t): The client API version.
  - build_id (String.t): The build ID.
  - opts (KeywordList): [optional] Optional parameters

  ## Returns

  {:ok, %Microsoft.Azure.Management.Preview.Containers.Model.BuildGetLogResult{}} on success
  {:error, info} on failure
  """
  @spec builds_get_log_link(Tesla.Env.client, String.t, String.t, String.t, String.t, String.t, keyword()) :: {:ok, Microsoft.Azure.Management.Preview.Containers.Model.BuildGetLogResult.t} | {:error, Tesla.Env.t}
  def builds_get_log_link(connection, subscription_id, resource_group_name, registry_name, api_version, build_id, _opts \\ []) do
    %{}
    |> method(:post)
    |> url("/subscriptions/#{subscription_id}/resourceGroups/#{resource_group_name}/providers/Microsoft.ContainerRegistry/registries/#{registry_name}/builds/#{build_id}/getLogLink")
    |> add_param(:query, :"api-version", api_version)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%Microsoft.Azure.Management.Preview.Containers.Model.BuildGetLogResult{})
  end

  @doc """
  Gets all the builds for a registry.

  ## Parameters

  - connection (Microsoft.Azure.Management.Preview.Containers.Connection): Connection to server
  - subscription_id (String.t): The Microsoft Azure subscription ID.
  - resource_group_name (String.t): The name of the resource group to which the container registry belongs.
  - registry_name (String.t): The name of the container registry.
  - api_version (String.t): The client API version.
  - opts (KeywordList): [optional] Optional parameters
    - :__filter (String.t): The builds filter to apply on the operation.
    - :__top (integer()): $top is supported for get list of builds, which limits the maximum number of builds to return.
    - :__skip_token (String.t): $skipToken is supported on get list of builds, which provides the next page in the list of builds.

  ## Returns

  {:ok, %Microsoft.Azure.Management.Preview.Containers.Model.BuildListResult{}} on success
  {:error, info} on failure
  """
  @spec builds_list(Tesla.Env.client, String.t, String.t, String.t, String.t, keyword()) :: {:ok, Microsoft.Azure.Management.Preview.Containers.Model.BuildListResult.t} | {:error, Tesla.Env.t}
  def builds_list(connection, subscription_id, resource_group_name, registry_name, api_version, opts \\ []) do
    optional_params = %{
      :"$filter" => :query,
      :"$top" => :query,
      :"$skipToken" => :query
    }
    %{}
    |> method(:get)
    |> url("/subscriptions/#{subscription_id}/resourceGroups/#{resource_group_name}/providers/Microsoft.ContainerRegistry/registries/#{registry_name}/builds")
    |> add_param(:query, :"api-version", api_version)
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%Microsoft.Azure.Management.Preview.Containers.Model.BuildListResult{})
  end

  @doc """
  Patch the build properties.

  ## Parameters

  - connection (Microsoft.Azure.Management.Preview.Containers.Connection): Connection to server
  - subscription_id (String.t): The Microsoft Azure subscription ID.
  - resource_group_name (String.t): The name of the resource group to which the container registry belongs.
  - registry_name (String.t): The name of the container registry.
  - api_version (String.t): The client API version.
  - build_id (String.t): The build ID.
  - build_update_parameters (BuildUpdateParameters): The build update properties.
  - opts (KeywordList): [optional] Optional parameters

  ## Returns

  {:ok, %Microsoft.Azure.Management.Preview.Containers.Model.Build{}} on success
  {:error, info} on failure
  """
  @spec builds_update(Tesla.Env.client, String.t, String.t, String.t, String.t, String.t, Microsoft.Azure.Management.Preview.Containers.Model.BuildUpdateParameters.t, keyword()) :: {:ok, Microsoft.Azure.Management.Preview.Containers.Model.Build.t} | {:error, Tesla.Env.t}
  def builds_update(connection, subscription_id, resource_group_name, registry_name, api_version, build_id, build_update_parameters, _opts \\ []) do
    %{}
    |> method(:patch)
    |> url("/subscriptions/#{subscription_id}/resourceGroups/#{resource_group_name}/providers/Microsoft.ContainerRegistry/registries/#{registry_name}/builds/#{build_id}")
    |> add_param(:query, :"api-version", api_version)
    |> add_param(:body, :body, build_update_parameters)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%Microsoft.Azure.Management.Preview.Containers.Model.Build{})
  end
end
