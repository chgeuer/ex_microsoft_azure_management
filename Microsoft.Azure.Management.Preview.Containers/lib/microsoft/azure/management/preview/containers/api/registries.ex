# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule Microsoft.Azure.Management.Preview.Containers.Api.Registries do
  @moduledoc """
  API calls for all endpoints tagged `Registries`.
  """

  alias Microsoft.Azure.Management.Preview.Containers.Connection
  import Microsoft.Azure.Management.Preview.Containers.RequestBuilder


  @doc """
  Get the upload location for the user to be able to upload the source.

  ## Parameters

  - connection (Microsoft.Azure.Management.Preview.Containers.Connection): Connection to server
  - subscription_id (String.t): The Microsoft Azure subscription ID.
  - resource_group_name (String.t): The name of the resource group to which the container registry belongs.
  - registry_name (String.t): The name of the container registry.
  - api_version (String.t): The client API version.
  - opts (KeywordList): [optional] Optional parameters

  ## Returns

  {:ok, %Microsoft.Azure.Management.Preview.Containers.Model.SourceUploadDefinition{}} on success
  {:error, info} on failure
  """
  @spec registries_get_build_source_upload_url(Tesla.Env.client, String.t, String.t, String.t, String.t, keyword()) :: {:ok, Microsoft.Azure.Management.Preview.Containers.Model.SourceUploadDefinition.t} | {:error, Tesla.Env.t}
  def registries_get_build_source_upload_url(connection, subscription_id, resource_group_name, registry_name, api_version, _opts \\ []) do
    %{}
    |> method(:post)
    |> url("/subscriptions/#{subscription_id}/resourceGroups/#{resource_group_name}/providers/Microsoft.ContainerRegistry/registries/#{registry_name}/getBuildSourceUploadUrl")
    |> add_param(:query, :"api-version", api_version)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%Microsoft.Azure.Management.Preview.Containers.Model.SourceUploadDefinition{})
  end

  @doc """
  Creates a new build based on the request parameters and add it to the build queue.

  ## Parameters

  - connection (Microsoft.Azure.Management.Preview.Containers.Connection): Connection to server
  - subscription_id (String.t): The Microsoft Azure subscription ID.
  - resource_group_name (String.t): The name of the resource group to which the container registry belongs.
  - registry_name (String.t): The name of the container registry.
  - api_version (String.t): The client API version.
  - build_request (QueueBuildRequest): The parameters of a build that needs to queued.
  - opts (KeywordList): [optional] Optional parameters

  ## Returns

  {:ok, %Microsoft.Azure.Management.Preview.Containers.Model.Build{}} on success
  {:error, info} on failure
  """
  @spec registries_queue_build(Tesla.Env.client, String.t, String.t, String.t, String.t, Microsoft.Azure.Management.Preview.Containers.Model.QueueBuildRequest.t, keyword()) :: {:ok, Microsoft.Azure.Management.Preview.Containers.Model.Build.t} | {:error, Tesla.Env.t}
  def registries_queue_build(connection, subscription_id, resource_group_name, registry_name, api_version, build_request, _opts \\ []) do
    %{}
    |> method(:post)
    |> url("/subscriptions/#{subscription_id}/resourceGroups/#{resource_group_name}/providers/Microsoft.ContainerRegistry/registries/#{registry_name}/queueBuild")
    |> add_param(:query, :"api-version", api_version)
    |> add_param(:body, :body, build_request)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%Microsoft.Azure.Management.Preview.Containers.Model.Build{})
  end
end
