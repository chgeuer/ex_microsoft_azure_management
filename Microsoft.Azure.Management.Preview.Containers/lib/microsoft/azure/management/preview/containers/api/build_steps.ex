# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule Microsoft.Azure.Management.Preview.Containers.Api.BuildSteps do
  @moduledoc """
  API calls for all endpoints tagged `BuildSteps`.
  """

  alias Microsoft.Azure.Management.Preview.Containers.Connection
  import Microsoft.Azure.Management.Preview.Containers.RequestBuilder


  @doc """
  Creates a build step for a build task.

  ## Parameters

  - connection (Microsoft.Azure.Management.Preview.Containers.Connection): Connection to server
  - subscription_id (String.t): The Microsoft Azure subscription ID.
  - resource_group_name (String.t): The name of the resource group to which the container registry belongs.
  - registry_name (String.t): The name of the container registry.
  - api_version (String.t): The client API version.
  - build_task_name (String.t): The name of the container registry build task.
  - step_name (String.t): The name of a build step for a container registry build task.
  - build_step_create_parameters (BuildStep): The parameters for creating a build step.
  - opts (KeywordList): [optional] Optional parameters

  ## Returns

  {:ok, %Microsoft.Azure.Management.Preview.Containers.Model.BuildStep{}} on success
  {:error, info} on failure
  """
  @spec build_steps_create(Tesla.Env.client, String.t, String.t, String.t, String.t, String.t, String.t, Microsoft.Azure.Management.Preview.Containers.Model.BuildStep.t, keyword()) :: {:ok, Microsoft.Azure.Management.Preview.Containers.Model.BuildStep.t} | {:error, Tesla.Env.t}
  def build_steps_create(connection, subscription_id, resource_group_name, registry_name, api_version, build_task_name, step_name, build_step_create_parameters, _opts \\ []) do
    %{}
    |> method(:put)
    |> url("/subscriptions/#{subscription_id}/resourceGroups/#{resource_group_name}/providers/Microsoft.ContainerRegistry/registries/#{registry_name}/buildTasks/#{build_task_name}/steps/#{step_name}")
    |> add_param(:query, :"api-version", api_version)
    |> add_param(:body, :body, build_step_create_parameters)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%Microsoft.Azure.Management.Preview.Containers.Model.BuildStep{})
  end

  @doc """
  Deletes a build step from the build task.

  ## Parameters

  - connection (Microsoft.Azure.Management.Preview.Containers.Connection): Connection to server
  - subscription_id (String.t): The Microsoft Azure subscription ID.
  - resource_group_name (String.t): The name of the resource group to which the container registry belongs.
  - registry_name (String.t): The name of the container registry.
  - api_version (String.t): The client API version.
  - build_task_name (String.t): The name of the container registry build task.
  - step_name (String.t): The name of a build step for a container registry build task.
  - opts (KeywordList): [optional] Optional parameters

  ## Returns

  {:ok, %{}} on success
  {:error, info} on failure
  """
  @spec build_steps_delete(Tesla.Env.client, String.t, String.t, String.t, String.t, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def build_steps_delete(connection, subscription_id, resource_group_name, registry_name, api_version, build_task_name, step_name, _opts \\ []) do
    %{}
    |> method(:delete)
    |> url("/subscriptions/#{subscription_id}/resourceGroups/#{resource_group_name}/providers/Microsoft.ContainerRegistry/registries/#{registry_name}/buildTasks/#{build_task_name}/steps/#{step_name}")
    |> add_param(:query, :"api-version", api_version)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(false)
  end

  @doc """
  Gets the build step for a build task.

  ## Parameters

  - connection (Microsoft.Azure.Management.Preview.Containers.Connection): Connection to server
  - subscription_id (String.t): The Microsoft Azure subscription ID.
  - resource_group_name (String.t): The name of the resource group to which the container registry belongs.
  - registry_name (String.t): The name of the container registry.
  - api_version (String.t): The client API version.
  - build_task_name (String.t): The name of the container registry build task.
  - step_name (String.t): The name of a build step for a container registry build task.
  - opts (KeywordList): [optional] Optional parameters

  ## Returns

  {:ok, %Microsoft.Azure.Management.Preview.Containers.Model.BuildStep{}} on success
  {:error, info} on failure
  """
  @spec build_steps_get(Tesla.Env.client, String.t, String.t, String.t, String.t, String.t, String.t, keyword()) :: {:ok, Microsoft.Azure.Management.Preview.Containers.Model.BuildStep.t} | {:error, Tesla.Env.t}
  def build_steps_get(connection, subscription_id, resource_group_name, registry_name, api_version, build_task_name, step_name, _opts \\ []) do
    %{}
    |> method(:get)
    |> url("/subscriptions/#{subscription_id}/resourceGroups/#{resource_group_name}/providers/Microsoft.ContainerRegistry/registries/#{registry_name}/buildTasks/#{build_task_name}/steps/#{step_name}")
    |> add_param(:query, :"api-version", api_version)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%Microsoft.Azure.Management.Preview.Containers.Model.BuildStep{})
  end

  @doc """
  List all the build steps for a given build task.

  ## Parameters

  - connection (Microsoft.Azure.Management.Preview.Containers.Connection): Connection to server
  - subscription_id (String.t): The Microsoft Azure subscription ID.
  - resource_group_name (String.t): The name of the resource group to which the container registry belongs.
  - registry_name (String.t): The name of the container registry.
  - api_version (String.t): The client API version.
  - build_task_name (String.t): The name of the container registry build task.
  - opts (KeywordList): [optional] Optional parameters

  ## Returns

  {:ok, %Microsoft.Azure.Management.Preview.Containers.Model.BuildStepList{}} on success
  {:error, info} on failure
  """
  @spec build_steps_list(Tesla.Env.client, String.t, String.t, String.t, String.t, String.t, keyword()) :: {:ok, Microsoft.Azure.Management.Preview.Containers.Model.BuildStepList.t} | {:error, Tesla.Env.t}
  def build_steps_list(connection, subscription_id, resource_group_name, registry_name, api_version, build_task_name, _opts \\ []) do
    %{}
    |> method(:get)
    |> url("/subscriptions/#{subscription_id}/resourceGroups/#{resource_group_name}/providers/Microsoft.ContainerRegistry/registries/#{registry_name}/buildTasks/#{build_task_name}/steps")
    |> add_param(:query, :"api-version", api_version)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%Microsoft.Azure.Management.Preview.Containers.Model.BuildStepList{})
  end

  @doc """
  List the build arguments for a step including the secret arguments.

  ## Parameters

  - connection (Microsoft.Azure.Management.Preview.Containers.Connection): Connection to server
  - subscription_id (String.t): The Microsoft Azure subscription ID.
  - resource_group_name (String.t): The name of the resource group to which the container registry belongs.
  - registry_name (String.t): The name of the container registry.
  - api_version (String.t): The client API version.
  - build_task_name (String.t): The name of the container registry build task.
  - step_name (String.t): The name of a build step for a container registry build task.
  - opts (KeywordList): [optional] Optional parameters

  ## Returns

  {:ok, %Microsoft.Azure.Management.Preview.Containers.Model.BuildArgumentList{}} on success
  {:error, info} on failure
  """
  @spec build_steps_list_build_arguments(Tesla.Env.client, String.t, String.t, String.t, String.t, String.t, String.t, keyword()) :: {:ok, Microsoft.Azure.Management.Preview.Containers.Model.BuildArgumentList.t} | {:error, Tesla.Env.t}
  def build_steps_list_build_arguments(connection, subscription_id, resource_group_name, registry_name, api_version, build_task_name, step_name, _opts \\ []) do
    %{}
    |> method(:post)
    |> url("/subscriptions/#{subscription_id}/resourceGroups/#{resource_group_name}/providers/Microsoft.ContainerRegistry/registries/#{registry_name}/buildTasks/#{build_task_name}/steps/#{step_name}/listBuildArguments")
    |> add_param(:query, :"api-version", api_version)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%Microsoft.Azure.Management.Preview.Containers.Model.BuildArgumentList{})
  end

  @doc """
  Updates a build step in a build task.

  ## Parameters

  - connection (Microsoft.Azure.Management.Preview.Containers.Connection): Connection to server
  - subscription_id (String.t): The Microsoft Azure subscription ID.
  - resource_group_name (String.t): The name of the resource group to which the container registry belongs.
  - registry_name (String.t): The name of the container registry.
  - api_version (String.t): The client API version.
  - build_task_name (String.t): The name of the container registry build task.
  - step_name (String.t): The name of a build step for a container registry build task.
  - build_step_update_parameters (BuildStepUpdateParameters): The parameters for updating a build step.
  - opts (KeywordList): [optional] Optional parameters

  ## Returns

  {:ok, %Microsoft.Azure.Management.Preview.Containers.Model.BuildStep{}} on success
  {:error, info} on failure
  """
  @spec build_steps_update(Tesla.Env.client, String.t, String.t, String.t, String.t, String.t, String.t, Microsoft.Azure.Management.Preview.Containers.Model.BuildStepUpdateParameters.t, keyword()) :: {:ok, Microsoft.Azure.Management.Preview.Containers.Model.BuildStep.t} | {:error, Tesla.Env.t}
  def build_steps_update(connection, subscription_id, resource_group_name, registry_name, api_version, build_task_name, step_name, build_step_update_parameters, _opts \\ []) do
    %{}
    |> method(:patch)
    |> url("/subscriptions/#{subscription_id}/resourceGroups/#{resource_group_name}/providers/Microsoft.ContainerRegistry/registries/#{registry_name}/buildTasks/#{build_task_name}/steps/#{step_name}")
    |> add_param(:query, :"api-version", api_version)
    |> add_param(:body, :body, build_step_update_parameters)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%Microsoft.Azure.Management.Preview.Containers.Model.BuildStep{})
  end
end
