# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule Microsoft.Azure.Management.Network.Api.ConnectionMonitors do
  @moduledoc """
  API calls for all endpoints tagged `ConnectionMonitors`.
  """

  alias Microsoft.Azure.Management.Network.Connection
  import Microsoft.Azure.Management.Network.RequestBuilder


  @doc """
  Create or update a connection monitor.

  ## Parameters

  - connection (Microsoft.Azure.Management.Network.Connection): Connection to server
  - resource_group_name (String.t): The name of the resource group containing Network Watcher.
  - network_watcher_name (String.t): The name of the Network Watcher resource.
  - connection_monitor_name (String.t): The name of the connection monitor.
  - parameters (ConnectionMonitor): Parameters that define the operation to create a connection monitor.
  - api_version (String.t): Client API version.
  - subscription_id (String.t): The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  - opts (KeywordList): [optional] Optional parameters

  ## Returns

  {:ok, %Microsoft.Azure.Management.Network.Model.ConnectionMonitorResult{}} on success
  {:error, info} on failure
  """
  @spec connection_monitors_create_or_update(Tesla.Env.client, String.t, String.t, String.t, Microsoft.Azure.Management.Network.Model.ConnectionMonitor.t, String.t, String.t, keyword()) :: {:ok, Microsoft.Azure.Management.Network.Model.ConnectionMonitorResult.t} | {:error, Tesla.Env.t}
  def connection_monitors_create_or_update(connection, resource_group_name, network_watcher_name, connection_monitor_name, parameters, api_version, subscription_id, _opts \\ []) do
    %{}
    |> method(:put)
    |> url("/subscriptions/#{subscription_id}/resourceGroups/#{resource_group_name}/providers/Microsoft.Network/networkWatchers/#{network_watcher_name}/connectionMonitors/#{connection_monitor_name}")
    |> add_param(:body, :body, parameters)
    |> add_param(:query, :"api-version", api_version)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%Microsoft.Azure.Management.Network.Model.ConnectionMonitorResult{})
  end

  @doc """
  Deletes the specified connection monitor.

  ## Parameters

  - connection (Microsoft.Azure.Management.Network.Connection): Connection to server
  - resource_group_name (String.t): The name of the resource group containing Network Watcher.
  - network_watcher_name (String.t): The name of the Network Watcher resource.
  - connection_monitor_name (String.t): The name of the connection monitor.
  - api_version (String.t): Client API version.
  - subscription_id (String.t): The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  - opts (KeywordList): [optional] Optional parameters

  ## Returns

  {:ok, %{}} on success
  {:error, info} on failure
  """
  @spec connection_monitors_delete(Tesla.Env.client, String.t, String.t, String.t, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def connection_monitors_delete(connection, resource_group_name, network_watcher_name, connection_monitor_name, api_version, subscription_id, _opts \\ []) do
    %{}
    |> method(:delete)
    |> url("/subscriptions/#{subscription_id}/resourceGroups/#{resource_group_name}/providers/Microsoft.Network/networkWatchers/#{network_watcher_name}/connectionMonitors/#{connection_monitor_name}")
    |> add_param(:query, :"api-version", api_version)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(false)
  end

  @doc """
  Gets a connection monitor by name.

  ## Parameters

  - connection (Microsoft.Azure.Management.Network.Connection): Connection to server
  - resource_group_name (String.t): The name of the resource group containing Network Watcher.
  - network_watcher_name (String.t): The name of the Network Watcher resource.
  - connection_monitor_name (String.t): The name of the connection monitor.
  - api_version (String.t): Client API version.
  - subscription_id (String.t): The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  - opts (KeywordList): [optional] Optional parameters

  ## Returns

  {:ok, %Microsoft.Azure.Management.Network.Model.ConnectionMonitorResult{}} on success
  {:error, info} on failure
  """
  @spec connection_monitors_get(Tesla.Env.client, String.t, String.t, String.t, String.t, String.t, keyword()) :: {:ok, Microsoft.Azure.Management.Network.Model.ConnectionMonitorResult.t} | {:error, Tesla.Env.t}
  def connection_monitors_get(connection, resource_group_name, network_watcher_name, connection_monitor_name, api_version, subscription_id, _opts \\ []) do
    %{}
    |> method(:get)
    |> url("/subscriptions/#{subscription_id}/resourceGroups/#{resource_group_name}/providers/Microsoft.Network/networkWatchers/#{network_watcher_name}/connectionMonitors/#{connection_monitor_name}")
    |> add_param(:query, :"api-version", api_version)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%Microsoft.Azure.Management.Network.Model.ConnectionMonitorResult{})
  end

  @doc """
  Lists all connection monitors for the specified Network Watcher.

  ## Parameters

  - connection (Microsoft.Azure.Management.Network.Connection): Connection to server
  - resource_group_name (String.t): The name of the resource group containing Network Watcher.
  - network_watcher_name (String.t): The name of the Network Watcher resource.
  - api_version (String.t): Client API version.
  - subscription_id (String.t): The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  - opts (KeywordList): [optional] Optional parameters

  ## Returns

  {:ok, %Microsoft.Azure.Management.Network.Model.ConnectionMonitorListResult{}} on success
  {:error, info} on failure
  """
  @spec connection_monitors_list(Tesla.Env.client, String.t, String.t, String.t, String.t, keyword()) :: {:ok, Microsoft.Azure.Management.Network.Model.ConnectionMonitorListResult.t} | {:error, Tesla.Env.t}
  def connection_monitors_list(connection, resource_group_name, network_watcher_name, api_version, subscription_id, _opts \\ []) do
    %{}
    |> method(:get)
    |> url("/subscriptions/#{subscription_id}/resourceGroups/#{resource_group_name}/providers/Microsoft.Network/networkWatchers/#{network_watcher_name}/connectionMonitors")
    |> add_param(:query, :"api-version", api_version)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%Microsoft.Azure.Management.Network.Model.ConnectionMonitorListResult{})
  end

  @doc """
  Query a snapshot of the most recent connection states.

  ## Parameters

  - connection (Microsoft.Azure.Management.Network.Connection): Connection to server
  - resource_group_name (String.t): The name of the resource group containing Network Watcher.
  - network_watcher_name (String.t): The name of the Network Watcher resource.
  - connection_monitor_name (String.t): The name given to the connection monitor.
  - api_version (String.t): Client API version.
  - subscription_id (String.t): The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  - opts (KeywordList): [optional] Optional parameters

  ## Returns

  {:ok, %Microsoft.Azure.Management.Network.Model.ConnectionMonitorQueryResult{}} on success
  {:error, info} on failure
  """
  @spec connection_monitors_query(Tesla.Env.client, String.t, String.t, String.t, String.t, String.t, keyword()) :: {:ok, Microsoft.Azure.Management.Network.Model.ConnectionMonitorQueryResult.t} | {:error, Tesla.Env.t}
  def connection_monitors_query(connection, resource_group_name, network_watcher_name, connection_monitor_name, api_version, subscription_id, _opts \\ []) do
    %{}
    |> method(:post)
    |> url("/subscriptions/#{subscription_id}/resourceGroups/#{resource_group_name}/providers/Microsoft.Network/networkWatchers/#{network_watcher_name}/connectionMonitors/#{connection_monitor_name}/query")
    |> add_param(:query, :"api-version", api_version)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%Microsoft.Azure.Management.Network.Model.ConnectionMonitorQueryResult{})
  end

  @doc """
  Starts the specified connection monitor.

  ## Parameters

  - connection (Microsoft.Azure.Management.Network.Connection): Connection to server
  - resource_group_name (String.t): The name of the resource group containing Network Watcher.
  - network_watcher_name (String.t): The name of the Network Watcher resource.
  - connection_monitor_name (String.t): The name of the connection monitor.
  - api_version (String.t): Client API version.
  - subscription_id (String.t): The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  - opts (KeywordList): [optional] Optional parameters

  ## Returns

  {:ok, %{}} on success
  {:error, info} on failure
  """
  @spec connection_monitors_start(Tesla.Env.client, String.t, String.t, String.t, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def connection_monitors_start(connection, resource_group_name, network_watcher_name, connection_monitor_name, api_version, subscription_id, _opts \\ []) do
    %{}
    |> method(:post)
    |> url("/subscriptions/#{subscription_id}/resourceGroups/#{resource_group_name}/providers/Microsoft.Network/networkWatchers/#{network_watcher_name}/connectionMonitors/#{connection_monitor_name}/start")
    |> add_param(:query, :"api-version", api_version)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(false)
  end

  @doc """
  Stops the specified connection monitor.

  ## Parameters

  - connection (Microsoft.Azure.Management.Network.Connection): Connection to server
  - resource_group_name (String.t): The name of the resource group containing Network Watcher.
  - network_watcher_name (String.t): The name of the Network Watcher resource.
  - connection_monitor_name (String.t): The name of the connection monitor.
  - api_version (String.t): Client API version.
  - subscription_id (String.t): The subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
  - opts (KeywordList): [optional] Optional parameters

  ## Returns

  {:ok, %{}} on success
  {:error, info} on failure
  """
  @spec connection_monitors_stop(Tesla.Env.client, String.t, String.t, String.t, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def connection_monitors_stop(connection, resource_group_name, network_watcher_name, connection_monitor_name, api_version, subscription_id, _opts \\ []) do
    %{}
    |> method(:post)
    |> url("/subscriptions/#{subscription_id}/resourceGroups/#{resource_group_name}/providers/Microsoft.Network/networkWatchers/#{network_watcher_name}/connectionMonitors/#{connection_monitor_name}/stop")
    |> add_param(:query, :"api-version", api_version)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(false)
  end
end
